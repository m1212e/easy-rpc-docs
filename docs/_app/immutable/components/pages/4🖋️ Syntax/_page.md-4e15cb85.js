import{S as Ll,i as Ul,s as Gl,U as Yt,v as se,w as ae,x as te,V as Kl,W as Ql,f as le,t as ne,y as oe,X as zl,k as t,q as i,a as B,l,m as n,h as a,r as p,c as y,n as v,b as d,D as s,Z as Ee,e as b,_ as _e,E as Ae}from"../../../chunks/index-7ac94c92.js";import{P as Wl}from"../../../chunks/Page-c0f2c207.js";import{C as he}from"../../../chunks/Code-6d2e2b36.js";function Xl(E){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ping</span><span style="color: #ABB2BF">()</span></div></code></div></pre>`,f;return{c(){r=new Ee(!1),f=b(),this.h()},l(c){r=_e(c,!1),f=b(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ae,d(c){c&&a(f),c&&r.d()}}}function Yl(E){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">// Endpoint with a parameter</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">logToServerConsole</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">)</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// Endpoint with a return type</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">getCurrentTime</span><span style="color: #ABB2BF">() </span><span style="color: #C678DD">int32</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// Endpoint with a signle parameter and return type</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">echo</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">echoMessage</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// Endpoint with multiple parameters and a return type</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">sendMessageTo</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">userId</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div></code></div></pre>`,f;return{c(){r=new Ee(!1),f=b(),this.h()},l(c){r=_e(c,!1),f=b(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ae,d(c){c&&a(f),c&&r.d()}}}function Zl(E){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">example</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">enumParameter</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">"example"</span><span style="color: #ABB2BF"> | </span><span style="color: #D19A66">420</span><span style="color: #ABB2BF"> | </span><span style="color: #D19A66">true</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"success"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"error"</span></div></code></div></pre>`,f;return{c(){r=new Ee(!1),f=b(),this.h()},l(c){r=_e(c,!1),f=b(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ae,d(c){c&&a(f),c&&r.d()}}}function Jl(E){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ExampleType</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">field1</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">field2</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">"ex"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"ample"</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'></div><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">AnotherType</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">field1</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ExampleType</span></div><div class='line'><span style="color: #ABB2BF">}</span></div></code></div></pre>`,f;return{c(){r=new Ee(!1),f=b(),this.h()},l(c){r=_e(c,!1),f=b(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ae,d(c){c&&a(f),c&&r.d()}}}function en(E){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Player</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">name</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">achievements</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">[]</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">levelsCompleted</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">boolean</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">99</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">}</span></div></code></div></pre>`,f;return{c(){r=new Ee(!1),f=b(),this.h()},l(c){r=_e(c,!1),f=b(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ae,d(c){c&&a(f),c&&r.d()}}}function sn(E){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Player</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">name</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">secondName</span><span style="color: #ABB2BF">? </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'><span style="color: #ABB2BF">  </span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">exampleEndpoint</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">requiredParameter</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">optionalParameter</span><span style="color: #ABB2BF">? </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">)</span></div></code></div></pre>`,f;return{c(){r=new Ee(!1),f=b(),this.h()},l(c){r=_e(c,!1),f=b(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ae,d(c){c&&a(f),c&&r.d()}}}function an(E){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">    This represents a player of the game</span></div><div class='line'><span style="color: #7F848E">*/</span></div><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Player</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">        This comment will be documentational</span></div><div class='line'><span style="color: #7F848E">    */</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">name</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E">/*</span></div><div class='line'><span style="color: #7F848E">        This one will be ignored</span></div><div class='line'><span style="color: #7F848E">    */</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">achievements</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">[]</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E">// I'm going to be ignored</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">levelsCompleted</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">boolean</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">99</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E"># Me too</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">    This returns the player by their name</span></div><div class='line'><span style="color: #7F848E">*/</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">getPlayer</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">name</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #E5C07B">Player</span></div><div class='line'></div></code></div></pre>`,f;return{c(){r=new Ee(!1),f=b(),this.h()},l(c){r=_e(c,!1),f=b(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ae,d(c){c&&a(f),c&&r.d()}}}function tn(E){let r,m,f,c,u,$,be,Cs,$e,C,ya,ge,va,ua,Oe,Fe,ma,ha,Ds,T,w,Se,Ea,Ts,Ce,_a,ws,x,xs,k,Aa,De,ba,$a,ks,P,Ps,g,O,He,Fa,gs,Te,Ca,Os,S,H,Re,Da,Ss,we,Ta,Hs,R,Ne,re,qe,wa,xa,Ie,ka,Pa,h,ie,je,ga,Oa,N,Sa,Me,Ha,Ra,Ve,Na,qa,pe,ze,Ia,ja,Le,Ma,Va,ce,Ue,za,La,Ge,Ua,Ga,de,Ke,Ka,Qa,Qe,Wa,Xa,fe,We,Ya,Za,Xe,Ja,et,Be,Ye,st,at,Ze,tt,lt,ye,Je,nt,ot,es,rt,it,ve,ss,pt,ct,as,dt,ft,ue,ts,Bt,yt,ls,vt,ut,me,ns,mt,ht,os,Et,Rs,q,I,rs,_t,Ns,j,At,is,bt,$t,qs,M,Is,A,Ft,ps,Ct,Dt,cs,Tt,wt,ds,xt,kt,fs,Pt,gt,js,V,z,Bs,Ot,Ms,xe,St,Vs,L,zs,U,G,ys,Ht,Ls,K,Rt,vs,Nt,qt,Us,Q,Gs,W,X,us,It,Ks,ke,jt,Qs,Y,Ws,Z,J,ms,Mt,Xs,Pe,Vt,Ys,ee,Zs;return x=new he({props:{filename:"example.erpc",$$slots:{default:[Xl]},$$scope:{ctx:E}}}),P=new he({props:{filename:"example.erpc",$$slots:{default:[Yl]},$$scope:{ctx:E}}}),M=new he({props:{filename:"example.erpc",$$slots:{default:[Zl]},$$scope:{ctx:E}}}),L=new he({props:{filename:"example.erpc",$$slots:{default:[Jl]},$$scope:{ctx:E}}}),Q=new he({props:{filename:"example.erpc",$$slots:{default:[en]},$$scope:{ctx:E}}}),Y=new he({props:{filename:"example.erpc",$$slots:{default:[sn]},$$scope:{ctx:E}}}),ee=new he({props:{filename:"example.erpc",$$slots:{default:[an]},$$scope:{ctx:E}}}),{c(){r=t("h1"),m=t("a"),f=t("span"),c=i("easy-rpc Syntax"),u=B(),$=t("p"),be=i("easy-rpc uses a custom declaration language to specify the endpoints. In this section this language will be explained."),Cs=B(),$e=t("blockquote"),C=t("p"),ya=i("If you are looking for available configuration options to configure the "),ge=t("code"),va=i(".json"),ua=i(" files, see "),Oe=t("strong"),Fe=t("a"),ma=i("the configuration options"),ha=i(".."),Ds=B(),T=t("h2"),w=t("a"),Se=t("span"),Ea=i("Endpoints"),Ts=B(),Ce=t("p"),_a=i("Endpoints allways consist of at least a role and a name. This is the absolute minumum for a valid endpoint:"),ws=B(),se(x.$$.fragment),xs=B(),k=t("p"),Aa=i("Endpoints can have parameters and return types. These can be any valid "),De=t("a"),ba=i("easy-rpc type"),$a=i("."),ks=B(),se(P.$$.fragment),Ps=B(),g=t("h2"),O=t("a"),He=t("span"),Fa=i("Types"),gs=B(),Te=t("p"),Ca=i("There are three kinds of types in easy-rpc."),Os=B(),S=t("h3"),H=t("a"),Re=t("span"),Da=i("Primitive types"),Ss=B(),we=t("p"),Ta=i("As in many other languages, easy-rpc knows a fixed set of primitive types."),Hs=B(),R=t("table"),Ne=t("thead"),re=t("tr"),qe=t("th"),wa=i("Identifier"),xa=B(),Ie=t("th"),ka=i("Description"),Pa=B(),h=t("tbody"),ie=t("tr"),je=t("td"),ga=i("boolean"),Oa=B(),N=t("td"),Sa=i("A value which can be "),Me=t("code"),Ha=i("true"),Ra=i(" or "),Ve=t("code"),Na=i("false"),qa=B(),pe=t("tr"),ze=t("td"),Ia=i("int"),ja=B(),Le=t("td"),Ma=i("A whole number (16bit)"),Va=B(),ce=t("tr"),Ue=t("td"),za=i("int8"),La=B(),Ge=t("td"),Ua=i("A whole number (8bit)"),Ga=B(),de=t("tr"),Ke=t("td"),Ka=i("int16"),Qa=B(),Qe=t("td"),Wa=i("A whole number (16bit)"),Xa=B(),fe=t("tr"),We=t("td"),Ya=i("int32"),Za=B(),Xe=t("td"),Ja=i("A whole number (32bit)"),et=B(),Be=t("tr"),Ye=t("td"),st=i("int64"),at=B(),Ze=t("td"),tt=i("A whole number (64bit)"),lt=B(),ye=t("tr"),Je=t("td"),nt=i("float"),ot=B(),es=t("td"),rt=i("A floating point number (32bit)"),it=B(),ve=t("tr"),ss=t("td"),pt=i("float32"),ct=B(),as=t("td"),dt=i("A floating point number (32bit)"),ft=B(),ue=t("tr"),ts=t("td"),Bt=i("float64"),yt=B(),ls=t("td"),vt=i("A floating point number (64bit)"),ut=B(),me=t("tr"),ns=t("td"),mt=i("string"),ht=B(),os=t("td"),Et=i("A string of characters"),Rs=B(),q=t("h3"),I=t("a"),rs=t("span"),_t=i("Enum types"),Ns=B(),j=t("p"),At=i("An enum value is a value which is one of a fixed set. Values are separated by a "),is=t("code"),bt=i("|"),$t=i("."),qs=B(),se(M.$$.fragment),Is=B(),A=t("p"),Ft=i("Enums can only contain primitive literals. The value must explicitly be stated. "),ps=t("code"),Ct=i("string"),Dt=i(" or "),cs=t("code"),Tt=i("int"),wt=i(" are not allowed, "),ds=t("code"),xt=i('"test"'),kt=i(" or "),fs=t("code"),Pt=i("69"),gt=i(" are."),js=B(),V=t("h3"),z=t("a"),Bs=t("span"),Ot=i("Custom types"),Ms=B(),xe=t("p"),St=i("Custom types are user defined types consisting of other user defined types or primitive types."),Vs=B(),se(L.$$.fragment),zs=B(),U=t("h3"),G=t("a"),ys=t("span"),Ht=i("Arrays"),Ls=B(),K=t("p"),Rt=i("Primitive or user defined types can be arrays. Arrays are marked via a "),vs=t("code"),Nt=i("[]"),qt=i(" behind the type. Arrays can have a fixed size."),Us=B(),se(Q.$$.fragment),Gs=B(),W=t("h3"),X=t("a"),us=t("span"),It=i("Optionals"),Ks=B(),ke=t("p"),jt=i("Fields and parameters can be optional. This indicates, that the field or parameter might not be set. To mark a field or parameter as optional, suffix it with a questionmark"),Qs=B(),se(Y.$$.fragment),Ws=B(),Z=t("h3"),J=t("a"),ms=t("span"),Mt=i("Comments"),Xs=B(),Pe=t("p"),Vt=i("easy-rpc allows for two kinds of comments: Disposeable and documentational. Disposeable comments are ignored while transpiling. Documentational comments are transferred into the generated types and methods."),Ys=B(),se(ee.$$.fragment),this.h()},l(e){r=l(e,"H1",{id:!0});var o=n(r);m=l(o,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var hs=n(m);f=l(hs,"SPAN",{class:!0}),n(f).forEach(a),hs.forEach(a),c=p(o,"easy-rpc Syntax"),o.forEach(a),u=y(e),$=l(e,"P",{});var Es=n($);be=p(Es,"easy-rpc uses a custom declaration language to specify the endpoints. In this section this language will be explained."),Es.forEach(a),Cs=y(e),$e=l(e,"BLOCKQUOTE",{});var _s=n($e);C=l(_s,"P",{});var D=n(C);ya=p(D,"If you are looking for available configuration options to configure the "),ge=l(D,"CODE",{});var As=n(ge);va=p(As,".json"),As.forEach(a),ua=p(D," files, see "),Oe=l(D,"STRONG",{});var bs=n(Oe);Fe=l(bs,"A",{href:!0});var $s=n(Fe);ma=p($s,"the configuration options"),$s.forEach(a),bs.forEach(a),ha=p(D,".."),D.forEach(a),_s.forEach(a),Ds=y(e),T=l(e,"H2",{id:!0});var zt=n(T);w=l(zt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Zt=n(w);Se=l(Zt,"SPAN",{class:!0}),n(Se).forEach(a),Zt.forEach(a),Ea=p(zt,"Endpoints"),zt.forEach(a),Ts=y(e),Ce=l(e,"P",{});var Jt=n(Ce);_a=p(Jt,"Endpoints allways consist of at least a role and a name. This is the absolute minumum for a valid endpoint:"),Jt.forEach(a),ws=y(e),ae(x.$$.fragment,e),xs=y(e),k=l(e,"P",{});var Js=n(k);Aa=p(Js,"Endpoints can have parameters and return types. These can be any valid "),De=l(Js,"A",{href:!0});var el=n(De);ba=p(el,"easy-rpc type"),el.forEach(a),$a=p(Js,"."),Js.forEach(a),ks=y(e),ae(P.$$.fragment,e),Ps=y(e),g=l(e,"H2",{id:!0});var Lt=n(g);O=l(Lt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var sl=n(O);He=l(sl,"SPAN",{class:!0}),n(He).forEach(a),sl.forEach(a),Fa=p(Lt,"Types"),Lt.forEach(a),gs=y(e),Te=l(e,"P",{});var al=n(Te);Ca=p(al,"There are three kinds of types in easy-rpc."),al.forEach(a),Os=y(e),S=l(e,"H3",{id:!0});var Ut=n(S);H=l(Ut,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var tl=n(H);Re=l(tl,"SPAN",{class:!0}),n(Re).forEach(a),tl.forEach(a),Da=p(Ut,"Primitive types"),Ut.forEach(a),Ss=y(e),we=l(e,"P",{});var ll=n(we);Ta=p(ll,"As in many other languages, easy-rpc knows a fixed set of primitive types."),ll.forEach(a),Hs=y(e),R=l(e,"TABLE",{});var ea=n(R);Ne=l(ea,"THEAD",{});var nl=n(Ne);re=l(nl,"TR",{});var sa=n(re);qe=l(sa,"TH",{});var ol=n(qe);wa=p(ol,"Identifier"),ol.forEach(a),xa=y(sa),Ie=l(sa,"TH",{});var rl=n(Ie);ka=p(rl,"Description"),rl.forEach(a),sa.forEach(a),nl.forEach(a),Pa=y(ea),h=l(ea,"TBODY",{});var _=n(h);ie=l(_,"TR",{});var aa=n(ie);je=l(aa,"TD",{});var il=n(je);ga=p(il,"boolean"),il.forEach(a),Oa=y(aa),N=l(aa,"TD",{});var Fs=n(N);Sa=p(Fs,"A value which can be "),Me=l(Fs,"CODE",{});var pl=n(Me);Ha=p(pl,"true"),pl.forEach(a),Ra=p(Fs," or "),Ve=l(Fs,"CODE",{});var cl=n(Ve);Na=p(cl,"false"),cl.forEach(a),Fs.forEach(a),aa.forEach(a),qa=y(_),pe=l(_,"TR",{});var ta=n(pe);ze=l(ta,"TD",{});var dl=n(ze);Ia=p(dl,"int"),dl.forEach(a),ja=y(ta),Le=l(ta,"TD",{});var fl=n(Le);Ma=p(fl,"A whole number (16bit)"),fl.forEach(a),ta.forEach(a),Va=y(_),ce=l(_,"TR",{});var la=n(ce);Ue=l(la,"TD",{});var Bl=n(Ue);za=p(Bl,"int8"),Bl.forEach(a),La=y(la),Ge=l(la,"TD",{});var yl=n(Ge);Ua=p(yl,"A whole number (8bit)"),yl.forEach(a),la.forEach(a),Ga=y(_),de=l(_,"TR",{});var na=n(de);Ke=l(na,"TD",{});var vl=n(Ke);Ka=p(vl,"int16"),vl.forEach(a),Qa=y(na),Qe=l(na,"TD",{});var ul=n(Qe);Wa=p(ul,"A whole number (16bit)"),ul.forEach(a),na.forEach(a),Xa=y(_),fe=l(_,"TR",{});var oa=n(fe);We=l(oa,"TD",{});var ml=n(We);Ya=p(ml,"int32"),ml.forEach(a),Za=y(oa),Xe=l(oa,"TD",{});var hl=n(Xe);Ja=p(hl,"A whole number (32bit)"),hl.forEach(a),oa.forEach(a),et=y(_),Be=l(_,"TR",{});var ra=n(Be);Ye=l(ra,"TD",{});var El=n(Ye);st=p(El,"int64"),El.forEach(a),at=y(ra),Ze=l(ra,"TD",{});var _l=n(Ze);tt=p(_l,"A whole number (64bit)"),_l.forEach(a),ra.forEach(a),lt=y(_),ye=l(_,"TR",{});var ia=n(ye);Je=l(ia,"TD",{});var Al=n(Je);nt=p(Al,"float"),Al.forEach(a),ot=y(ia),es=l(ia,"TD",{});var bl=n(es);rt=p(bl,"A floating point number (32bit)"),bl.forEach(a),ia.forEach(a),it=y(_),ve=l(_,"TR",{});var pa=n(ve);ss=l(pa,"TD",{});var $l=n(ss);pt=p($l,"float32"),$l.forEach(a),ct=y(pa),as=l(pa,"TD",{});var Fl=n(as);dt=p(Fl,"A floating point number (32bit)"),Fl.forEach(a),pa.forEach(a),ft=y(_),ue=l(_,"TR",{});var ca=n(ue);ts=l(ca,"TD",{});var Cl=n(ts);Bt=p(Cl,"float64"),Cl.forEach(a),yt=y(ca),ls=l(ca,"TD",{});var Dl=n(ls);vt=p(Dl,"A floating point number (64bit)"),Dl.forEach(a),ca.forEach(a),ut=y(_),me=l(_,"TR",{});var da=n(me);ns=l(da,"TD",{});var Tl=n(ns);mt=p(Tl,"string"),Tl.forEach(a),ht=y(da),os=l(da,"TD",{});var wl=n(os);Et=p(wl,"A string of characters"),wl.forEach(a),da.forEach(a),_.forEach(a),ea.forEach(a),Rs=y(e),q=l(e,"H3",{id:!0});var Gt=n(q);I=l(Gt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var xl=n(I);rs=l(xl,"SPAN",{class:!0}),n(rs).forEach(a),xl.forEach(a),_t=p(Gt,"Enum types"),Gt.forEach(a),Ns=y(e),j=l(e,"P",{});var fa=n(j);At=p(fa,"An enum value is a value which is one of a fixed set. Values are separated by a "),is=l(fa,"CODE",{});var kl=n(is);bt=p(kl,"|"),kl.forEach(a),$t=p(fa,"."),fa.forEach(a),qs=y(e),ae(M.$$.fragment,e),Is=y(e),A=l(e,"P",{});var F=n(A);Ft=p(F,"Enums can only contain primitive literals. The value must explicitly be stated. "),ps=l(F,"CODE",{});var Pl=n(ps);Ct=p(Pl,"string"),Pl.forEach(a),Dt=p(F," or "),cs=l(F,"CODE",{});var gl=n(cs);Tt=p(gl,"int"),gl.forEach(a),wt=p(F," are not allowed, "),ds=l(F,"CODE",{});var Ol=n(ds);xt=p(Ol,'"test"'),Ol.forEach(a),kt=p(F," or "),fs=l(F,"CODE",{});var Sl=n(fs);Pt=p(Sl,"69"),Sl.forEach(a),gt=p(F," are."),F.forEach(a),js=y(e),V=l(e,"H3",{id:!0});var Kt=n(V);z=l(Kt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Hl=n(z);Bs=l(Hl,"SPAN",{class:!0}),n(Bs).forEach(a),Hl.forEach(a),Ot=p(Kt,"Custom types"),Kt.forEach(a),Ms=y(e),xe=l(e,"P",{});var Rl=n(xe);St=p(Rl,"Custom types are user defined types consisting of other user defined types or primitive types."),Rl.forEach(a),Vs=y(e),ae(L.$$.fragment,e),zs=y(e),U=l(e,"H3",{id:!0});var Qt=n(U);G=l(Qt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Nl=n(G);ys=l(Nl,"SPAN",{class:!0}),n(ys).forEach(a),Nl.forEach(a),Ht=p(Qt,"Arrays"),Qt.forEach(a),Ls=y(e),K=l(e,"P",{});var Ba=n(K);Rt=p(Ba,"Primitive or user defined types can be arrays. Arrays are marked via a "),vs=l(Ba,"CODE",{});var ql=n(vs);Nt=p(ql,"[]"),ql.forEach(a),qt=p(Ba," behind the type. Arrays can have a fixed size."),Ba.forEach(a),Us=y(e),ae(Q.$$.fragment,e),Gs=y(e),W=l(e,"H3",{id:!0});var Wt=n(W);X=l(Wt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Il=n(X);us=l(Il,"SPAN",{class:!0}),n(us).forEach(a),Il.forEach(a),It=p(Wt,"Optionals"),Wt.forEach(a),Ks=y(e),ke=l(e,"P",{});var jl=n(ke);jt=p(jl,"Fields and parameters can be optional. This indicates, that the field or parameter might not be set. To mark a field or parameter as optional, suffix it with a questionmark"),jl.forEach(a),Qs=y(e),ae(Y.$$.fragment,e),Ws=y(e),Z=l(e,"H3",{id:!0});var Xt=n(Z);J=l(Xt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ml=n(J);ms=l(Ml,"SPAN",{class:!0}),n(ms).forEach(a),Ml.forEach(a),Mt=p(Xt,"Comments"),Xt.forEach(a),Xs=y(e),Pe=l(e,"P",{});var Vl=n(Pe);Vt=p(Vl,"easy-rpc allows for two kinds of comments: Disposeable and documentational. Disposeable comments are ignored while transpiling. Documentational comments are transferred into the generated types and methods."),Vl.forEach(a),Ys=y(e),ae(ee.$$.fragment,e),this.h()},h(){v(f,"class","icon icon-link"),v(m,"aria-hidden","true"),v(m,"tabindex","-1"),v(m,"href","#easy-rpc-syntax"),v(r,"id","easy-rpc-syntax"),v(Fe,"href","/easy-rpc-docs/5%E2%9A%99%EF%B8%8F%20Configuration"),v(Se,"class","icon icon-link"),v(w,"aria-hidden","true"),v(w,"tabindex","-1"),v(w,"href","#endpoints"),v(T,"id","endpoints"),v(De,"href","#Types"),v(He,"class","icon icon-link"),v(O,"aria-hidden","true"),v(O,"tabindex","-1"),v(O,"href","#types"),v(g,"id","types"),v(Re,"class","icon icon-link"),v(H,"aria-hidden","true"),v(H,"tabindex","-1"),v(H,"href","#primitive-types"),v(S,"id","primitive-types"),v(rs,"class","icon icon-link"),v(I,"aria-hidden","true"),v(I,"tabindex","-1"),v(I,"href","#enum-types"),v(q,"id","enum-types"),v(Bs,"class","icon icon-link"),v(z,"aria-hidden","true"),v(z,"tabindex","-1"),v(z,"href","#custom-types"),v(V,"id","custom-types"),v(ys,"class","icon icon-link"),v(G,"aria-hidden","true"),v(G,"tabindex","-1"),v(G,"href","#arrays"),v(U,"id","arrays"),v(us,"class","icon icon-link"),v(X,"aria-hidden","true"),v(X,"tabindex","-1"),v(X,"href","#optionals"),v(W,"id","optionals"),v(ms,"class","icon icon-link"),v(J,"aria-hidden","true"),v(J,"tabindex","-1"),v(J,"href","#comments"),v(Z,"id","comments")},m(e,o){d(e,r,o),s(r,m),s(m,f),s(r,c),d(e,u,o),d(e,$,o),s($,be),d(e,Cs,o),d(e,$e,o),s($e,C),s(C,ya),s(C,ge),s(ge,va),s(C,ua),s(C,Oe),s(Oe,Fe),s(Fe,ma),s(C,ha),d(e,Ds,o),d(e,T,o),s(T,w),s(w,Se),s(T,Ea),d(e,Ts,o),d(e,Ce,o),s(Ce,_a),d(e,ws,o),te(x,e,o),d(e,xs,o),d(e,k,o),s(k,Aa),s(k,De),s(De,ba),s(k,$a),d(e,ks,o),te(P,e,o),d(e,Ps,o),d(e,g,o),s(g,O),s(O,He),s(g,Fa),d(e,gs,o),d(e,Te,o),s(Te,Ca),d(e,Os,o),d(e,S,o),s(S,H),s(H,Re),s(S,Da),d(e,Ss,o),d(e,we,o),s(we,Ta),d(e,Hs,o),d(e,R,o),s(R,Ne),s(Ne,re),s(re,qe),s(qe,wa),s(re,xa),s(re,Ie),s(Ie,ka),s(R,Pa),s(R,h),s(h,ie),s(ie,je),s(je,ga),s(ie,Oa),s(ie,N),s(N,Sa),s(N,Me),s(Me,Ha),s(N,Ra),s(N,Ve),s(Ve,Na),s(h,qa),s(h,pe),s(pe,ze),s(ze,Ia),s(pe,ja),s(pe,Le),s(Le,Ma),s(h,Va),s(h,ce),s(ce,Ue),s(Ue,za),s(ce,La),s(ce,Ge),s(Ge,Ua),s(h,Ga),s(h,de),s(de,Ke),s(Ke,Ka),s(de,Qa),s(de,Qe),s(Qe,Wa),s(h,Xa),s(h,fe),s(fe,We),s(We,Ya),s(fe,Za),s(fe,Xe),s(Xe,Ja),s(h,et),s(h,Be),s(Be,Ye),s(Ye,st),s(Be,at),s(Be,Ze),s(Ze,tt),s(h,lt),s(h,ye),s(ye,Je),s(Je,nt),s(ye,ot),s(ye,es),s(es,rt),s(h,it),s(h,ve),s(ve,ss),s(ss,pt),s(ve,ct),s(ve,as),s(as,dt),s(h,ft),s(h,ue),s(ue,ts),s(ts,Bt),s(ue,yt),s(ue,ls),s(ls,vt),s(h,ut),s(h,me),s(me,ns),s(ns,mt),s(me,ht),s(me,os),s(os,Et),d(e,Rs,o),d(e,q,o),s(q,I),s(I,rs),s(q,_t),d(e,Ns,o),d(e,j,o),s(j,At),s(j,is),s(is,bt),s(j,$t),d(e,qs,o),te(M,e,o),d(e,Is,o),d(e,A,o),s(A,Ft),s(A,ps),s(ps,Ct),s(A,Dt),s(A,cs),s(cs,Tt),s(A,wt),s(A,ds),s(ds,xt),s(A,kt),s(A,fs),s(fs,Pt),s(A,gt),d(e,js,o),d(e,V,o),s(V,z),s(z,Bs),s(V,Ot),d(e,Ms,o),d(e,xe,o),s(xe,St),d(e,Vs,o),te(L,e,o),d(e,zs,o),d(e,U,o),s(U,G),s(G,ys),s(U,Ht),d(e,Ls,o),d(e,K,o),s(K,Rt),s(K,vs),s(vs,Nt),s(K,qt),d(e,Us,o),te(Q,e,o),d(e,Gs,o),d(e,W,o),s(W,X),s(X,us),s(W,It),d(e,Ks,o),d(e,ke,o),s(ke,jt),d(e,Qs,o),te(Y,e,o),d(e,Ws,o),d(e,Z,o),s(Z,J),s(J,ms),s(Z,Mt),d(e,Xs,o),d(e,Pe,o),s(Pe,Vt),d(e,Ys,o),te(ee,e,o),Zs=!0},p(e,o){const hs={};o&2&&(hs.$$scope={dirty:o,ctx:e}),x.$set(hs);const Es={};o&2&&(Es.$$scope={dirty:o,ctx:e}),P.$set(Es);const _s={};o&2&&(_s.$$scope={dirty:o,ctx:e}),M.$set(_s);const D={};o&2&&(D.$$scope={dirty:o,ctx:e}),L.$set(D);const As={};o&2&&(As.$$scope={dirty:o,ctx:e}),Q.$set(As);const bs={};o&2&&(bs.$$scope={dirty:o,ctx:e}),Y.$set(bs);const $s={};o&2&&($s.$$scope={dirty:o,ctx:e}),ee.$set($s)},i(e){Zs||(le(x.$$.fragment,e),le(P.$$.fragment,e),le(M.$$.fragment,e),le(L.$$.fragment,e),le(Q.$$.fragment,e),le(Y.$$.fragment,e),le(ee.$$.fragment,e),Zs=!0)},o(e){ne(x.$$.fragment,e),ne(P.$$.fragment,e),ne(M.$$.fragment,e),ne(L.$$.fragment,e),ne(Q.$$.fragment,e),ne(Y.$$.fragment,e),ne(ee.$$.fragment,e),Zs=!1},d(e){e&&a(r),e&&a(u),e&&a($),e&&a(Cs),e&&a($e),e&&a(Ds),e&&a(T),e&&a(Ts),e&&a(Ce),e&&a(ws),oe(x,e),e&&a(xs),e&&a(k),e&&a(ks),oe(P,e),e&&a(Ps),e&&a(g),e&&a(gs),e&&a(Te),e&&a(Os),e&&a(S),e&&a(Ss),e&&a(we),e&&a(Hs),e&&a(R),e&&a(Rs),e&&a(q),e&&a(Ns),e&&a(j),e&&a(qs),oe(M,e),e&&a(Is),e&&a(A),e&&a(js),e&&a(V),e&&a(Ms),e&&a(xe),e&&a(Vs),oe(L,e),e&&a(zs),e&&a(U),e&&a(Ls),e&&a(K),e&&a(Us),oe(Q,e),e&&a(Gs),e&&a(W),e&&a(Ks),e&&a(ke),e&&a(Qs),oe(Y,e),e&&a(Ws),e&&a(Z),e&&a(Xs),e&&a(Pe),e&&a(Ys),oe(ee,e)}}}function ln(E){let r,m;const f=[E[0]];let c={$$slots:{default:[tn]},$$scope:{ctx:E}};for(let u=0;u<f.length;u+=1)c=Yt(c,f[u]);return r=new Wl({props:c}),{c(){se(r.$$.fragment)},l(u){ae(r.$$.fragment,u)},m(u,$){te(r,u,$),m=!0},p(u,[$]){const be=$&1?Kl(f,[Ql(u[0])]):{};$&2&&(be.$$scope={dirty:$,ctx:u}),r.$set(be)},i(u){m||(le(r.$$.fragment,u),m=!0)},o(u){ne(r.$$.fragment,u),m=!1},d(u){oe(r,u)}}}function nn(E,r,m){return E.$$set=f=>{m(0,r=Yt(Yt({},r),zl(f)))},r=zl(r),[r]}class cn extends Ll{constructor(r){super(),Ul(this,r,nn,ln,Gl,{})}}export{cn as default};
