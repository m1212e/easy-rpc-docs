import{S as El,i as _l,s as Al,U as xa,v as ie,w as pe,x as ce,V as bl,W as $l,f as de,t as fe,y as ye,X as hl,k as a,q as i,a as y,l,m as n,h as t,r as p,c as B,n as v,b as d,D as s,Z as Fe,e as $,_ as De,E as Ce}from"../../../chunks/index-7ac94c92.js";import{P as Fl}from"../../../chunks/Page-c0f2c207.js";import{C as $e}from"../../../chunks/Code-6d2e2b36.js";function Dl(_){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ping</span><span style="color: #ABB2BF">()</span></div></code></div></pre>`,f;return{c(){r=new Fe(!1),f=$(),this.h()},l(c){r=De(c,!1),f=$(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ce,d(c){c&&t(f),c&&r.d()}}}function Cl(_){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">// Endpoint with a parameter</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">logToServerConsole</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">)</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// Endpoint with a return type</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">getCurrentTime</span><span style="color: #ABB2BF">() </span><span style="color: #C678DD">int32</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// Endpoint with a signle parameter and return type</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">echo</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">echoMessage</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// Endpoint with multiple parameters and a return type</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">sendMessageTo</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">userId</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div></code></div></pre>`,f;return{c(){r=new Fe(!1),f=$(),this.h()},l(c){r=De(c,!1),f=$(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ce,d(c){c&&t(f),c&&r.d()}}}function Tl(_){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">example</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">enumParameter</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">"example"</span><span style="color: #ABB2BF"> | </span><span style="color: #D19A66">420</span><span style="color: #ABB2BF"> | </span><span style="color: #D19A66">true</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"success"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"error"</span></div></code></div></pre>`,f;return{c(){r=new Fe(!1),f=$(),this.h()},l(c){r=De(c,!1),f=$(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ce,d(c){c&&t(f),c&&r.d()}}}function wl(_){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ExampleType</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">field1</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">field2</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">"ex"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"ample"</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'></div><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">AnotherType</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">field1</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ExampleType</span></div><div class='line'><span style="color: #ABB2BF">}</span></div></code></div></pre>`,f;return{c(){r=new Fe(!1),f=$(),this.h()},l(c){r=De(c,!1),f=$(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ce,d(c){c&&t(f),c&&r.d()}}}function xl(_){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Player</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">name</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">achievements</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">[]</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">levelsCompleted</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">boolean</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">99</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">}</span></div></code></div></pre>`,f;return{c(){r=new Fe(!1),f=$(),this.h()},l(c){r=De(c,!1),f=$(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ce,d(c){c&&t(f),c&&r.d()}}}function kl(_){let r,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">    This represents a player of the game</span></div><div class='line'><span style="color: #7F848E">*/</span></div><div class='line'><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Player</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">        This comment will be documentational</span></div><div class='line'><span style="color: #7F848E">    */</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">name</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E">/*</span></div><div class='line'><span style="color: #7F848E">        This one will be ignored</span></div><div class='line'><span style="color: #7F848E">    */</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">achievements</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">[]</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E">// I'm going to be ignored</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">levelsCompleted</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">boolean</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">99</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #7F848E"># Me too</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">    This returns the player by their name</span></div><div class='line'><span style="color: #7F848E">*/</span></div><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">getPlayer</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">name</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #E5C07B">Player</span></div><div class='line'></div></code></div></pre>`,f;return{c(){r=new Fe(!1),f=$(),this.h()},l(c){r=De(c,!1),f=$(),this.h()},h(){r.a=f},m(c,u){r.m(m,c,u),d(c,f,u)},p:Ce,d(c){c&&t(f),c&&r.d()}}}function Pl(_){let r,m,f,c,u,b,Be,vs,D,C,Te,et,us,ve,st,ms,T,hs,w,tt,ue,at,lt,Es,x,_s,k,P,we,nt,As,me,ot,bs,g,H,xe,rt,$s,he,it,Fs,S,ke,G,Pe,pt,ct,ge,dt,ft,h,J,He,yt,Bt,R,vt,Se,ut,mt,Re,ht,Et,K,Oe,_t,At,Ne,bt,$t,Q,Ie,Ft,Dt,je,Ct,Tt,ee,Me,wt,xt,Ve,kt,Pt,se,qe,gt,Ht,ze,St,Rt,te,Le,Ot,Nt,Ue,It,jt,ae,We,Mt,Vt,Xe,qt,zt,le,Ye,Lt,Ut,Ze,Wt,Xt,ne,Ge,Yt,Zt,Je,Gt,Jt,oe,Ke,Kt,Qt,Qe,ea,Ds,O,N,es,sa,Cs,I,ta,ss,aa,la,Ts,j,ws,A,na,ts,oa,ra,as,ia,pa,ls,ca,da,ns,fa,ya,xs,M,V,os,Ba,ks,Ee,va,Ps,q,gs,z,L,rs,ua,Hs,U,ma,is,ha,Ea,Ss,W,Rs,X,Y,ps,_a,Os,_e,Aa,Ns,Z,Is,Ae,ba,js;return T=new $e({props:{filename:"example.erpc",$$slots:{default:[Dl]},$$scope:{ctx:_}}}),x=new $e({props:{filename:"example.erpc",$$slots:{default:[Cl]},$$scope:{ctx:_}}}),j=new $e({props:{filename:"example.erpc",$$slots:{default:[Tl]},$$scope:{ctx:_}}}),q=new $e({props:{filename:"example.erpc",$$slots:{default:[wl]},$$scope:{ctx:_}}}),W=new $e({props:{filename:"example.erpc",$$slots:{default:[xl]},$$scope:{ctx:_}}}),Z=new $e({props:{filename:"example.erpc",$$slots:{default:[kl]},$$scope:{ctx:_}}}),{c(){r=a("h1"),m=a("a"),f=a("span"),c=i("easy-rpc Syntax"),u=y(),b=a("p"),Be=i("easy-rpc uses a custom declaration language to specify the endpoints. In this section this language will be explained."),vs=y(),D=a("h2"),C=a("a"),Te=a("span"),et=i("Endpoints"),us=y(),ve=a("p"),st=i("Endpoints allways consist of at least a role and a name. This is the absolute minumum for a valid endpoint:"),ms=y(),ie(T.$$.fragment),hs=y(),w=a("p"),tt=i("Endpoints can have parameters and return types. These can be any valid "),ue=a("a"),at=i("easy-rpc type"),lt=i("."),Es=y(),ie(x.$$.fragment),_s=y(),k=a("h2"),P=a("a"),we=a("span"),nt=i("Types"),As=y(),me=a("p"),ot=i("There are three kinds of types in easy-rpc."),bs=y(),g=a("h3"),H=a("a"),xe=a("span"),rt=i("Primitive types"),$s=y(),he=a("p"),it=i("As in many other languages, easy-rpc knows a fixed set of primitive types."),Fs=y(),S=a("table"),ke=a("thead"),G=a("tr"),Pe=a("th"),pt=i("Identifier"),ct=y(),ge=a("th"),dt=i("Description"),ft=y(),h=a("tbody"),J=a("tr"),He=a("td"),yt=i("boolean"),Bt=y(),R=a("td"),vt=i("A value which can be "),Se=a("code"),ut=i("true"),mt=i(" or "),Re=a("code"),ht=i("false"),Et=y(),K=a("tr"),Oe=a("td"),_t=i("int"),At=y(),Ne=a("td"),bt=i("A whole number (16bit)"),$t=y(),Q=a("tr"),Ie=a("td"),Ft=i("int8"),Dt=y(),je=a("td"),Ct=i("A whole number (8bit)"),Tt=y(),ee=a("tr"),Me=a("td"),wt=i("int16"),xt=y(),Ve=a("td"),kt=i("A whole number (16bit)"),Pt=y(),se=a("tr"),qe=a("td"),gt=i("int32"),Ht=y(),ze=a("td"),St=i("A whole number (32bit)"),Rt=y(),te=a("tr"),Le=a("td"),Ot=i("int64"),Nt=y(),Ue=a("td"),It=i("A whole number (64bit)"),jt=y(),ae=a("tr"),We=a("td"),Mt=i("float"),Vt=y(),Xe=a("td"),qt=i("A floating point number (32bit)"),zt=y(),le=a("tr"),Ye=a("td"),Lt=i("float32"),Ut=y(),Ze=a("td"),Wt=i("A floating point number (32bit)"),Xt=y(),ne=a("tr"),Ge=a("td"),Yt=i("float64"),Zt=y(),Je=a("td"),Gt=i("A floating point number (64bit)"),Jt=y(),oe=a("tr"),Ke=a("td"),Kt=i("string"),Qt=y(),Qe=a("td"),ea=i("A string of characters"),Ds=y(),O=a("h3"),N=a("a"),es=a("span"),sa=i("Enum types"),Cs=y(),I=a("p"),ta=i("An enum value is a value which is one of a fixed set. Values are separated by a "),ss=a("code"),aa=i("|"),la=i("."),Ts=y(),ie(j.$$.fragment),ws=y(),A=a("p"),na=i("Enums can only contain primitive literals. The value must explicitly be stated. "),ts=a("code"),oa=i("string"),ra=i(" or "),as=a("code"),ia=i("int"),pa=i(" are not allowed, "),ls=a("code"),ca=i('"test"'),da=i(" or "),ns=a("code"),fa=i("69"),ya=i(" are."),xs=y(),M=a("h3"),V=a("a"),os=a("span"),Ba=i("Custom types"),ks=y(),Ee=a("p"),va=i("Custom types are user defined types consisting of other user defined types or primitive types."),Ps=y(),ie(q.$$.fragment),gs=y(),z=a("h3"),L=a("a"),rs=a("span"),ua=i("Arrays"),Hs=y(),U=a("p"),ma=i("Primitive or user defined types can be arrays. Arrays are marked via a "),is=a("code"),ha=i("[]"),Ea=i(" behind the type. Arrays can have a fixed size."),Ss=y(),ie(W.$$.fragment),Rs=y(),X=a("h3"),Y=a("a"),ps=a("span"),_a=i("Comments"),Os=y(),_e=a("p"),Aa=i("easy-rpc allows for two kinds of comments: Disposeable and documentational. Disposeable comments are ignored while transpiling. Documentational comments are transferred into the generated types and methods."),Ns=y(),ie(Z.$$.fragment),Is=y(),Ae=a("p"),ba=i("configuration structure (json files)"),this.h()},l(e){r=l(e,"H1",{id:!0});var o=n(r);m=l(o,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var cs=n(m);f=l(cs,"SPAN",{class:!0}),n(f).forEach(t),cs.forEach(t),c=p(o,"easy-rpc Syntax"),o.forEach(t),u=B(e),b=l(e,"P",{});var ds=n(b);Be=p(ds,"easy-rpc uses a custom declaration language to specify the endpoints. In this section this language will be explained."),ds.forEach(t),vs=B(e),D=l(e,"H2",{id:!0});var be=n(D);C=l(be,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var fs=n(C);Te=l(fs,"SPAN",{class:!0}),n(Te).forEach(t),fs.forEach(t),et=p(be,"Endpoints"),be.forEach(t),us=B(e),ve=l(e,"P",{});var ys=n(ve);st=p(ys,"Endpoints allways consist of at least a role and a name. This is the absolute minumum for a valid endpoint:"),ys.forEach(t),ms=B(e),pe(T.$$.fragment,e),hs=B(e),w=l(e,"P",{});var re=n(w);tt=p(re,"Endpoints can have parameters and return types. These can be any valid "),ue=l(re,"A",{href:!0});var ka=n(ue);at=p(ka,"easy-rpc type"),ka.forEach(t),lt=p(re,"."),re.forEach(t),Es=B(e),pe(x.$$.fragment,e),_s=B(e),k=l(e,"H2",{id:!0});var $a=n(k);P=l($a,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Pa=n(P);we=l(Pa,"SPAN",{class:!0}),n(we).forEach(t),Pa.forEach(t),nt=p($a,"Types"),$a.forEach(t),As=B(e),me=l(e,"P",{});var ga=n(me);ot=p(ga,"There are three kinds of types in easy-rpc."),ga.forEach(t),bs=B(e),g=l(e,"H3",{id:!0});var Fa=n(g);H=l(Fa,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ha=n(H);xe=l(Ha,"SPAN",{class:!0}),n(xe).forEach(t),Ha.forEach(t),rt=p(Fa,"Primitive types"),Fa.forEach(t),$s=B(e),he=l(e,"P",{});var Sa=n(he);it=p(Sa,"As in many other languages, easy-rpc knows a fixed set of primitive types."),Sa.forEach(t),Fs=B(e),S=l(e,"TABLE",{});var Ms=n(S);ke=l(Ms,"THEAD",{});var Ra=n(ke);G=l(Ra,"TR",{});var Vs=n(G);Pe=l(Vs,"TH",{});var Oa=n(Pe);pt=p(Oa,"Identifier"),Oa.forEach(t),ct=B(Vs),ge=l(Vs,"TH",{});var Na=n(ge);dt=p(Na,"Description"),Na.forEach(t),Vs.forEach(t),Ra.forEach(t),ft=B(Ms),h=l(Ms,"TBODY",{});var E=n(h);J=l(E,"TR",{});var qs=n(J);He=l(qs,"TD",{});var Ia=n(He);yt=p(Ia,"boolean"),Ia.forEach(t),Bt=B(qs),R=l(qs,"TD",{});var Bs=n(R);vt=p(Bs,"A value which can be "),Se=l(Bs,"CODE",{});var ja=n(Se);ut=p(ja,"true"),ja.forEach(t),mt=p(Bs," or "),Re=l(Bs,"CODE",{});var Ma=n(Re);ht=p(Ma,"false"),Ma.forEach(t),Bs.forEach(t),qs.forEach(t),Et=B(E),K=l(E,"TR",{});var zs=n(K);Oe=l(zs,"TD",{});var Va=n(Oe);_t=p(Va,"int"),Va.forEach(t),At=B(zs),Ne=l(zs,"TD",{});var qa=n(Ne);bt=p(qa,"A whole number (16bit)"),qa.forEach(t),zs.forEach(t),$t=B(E),Q=l(E,"TR",{});var Ls=n(Q);Ie=l(Ls,"TD",{});var za=n(Ie);Ft=p(za,"int8"),za.forEach(t),Dt=B(Ls),je=l(Ls,"TD",{});var La=n(je);Ct=p(La,"A whole number (8bit)"),La.forEach(t),Ls.forEach(t),Tt=B(E),ee=l(E,"TR",{});var Us=n(ee);Me=l(Us,"TD",{});var Ua=n(Me);wt=p(Ua,"int16"),Ua.forEach(t),xt=B(Us),Ve=l(Us,"TD",{});var Wa=n(Ve);kt=p(Wa,"A whole number (16bit)"),Wa.forEach(t),Us.forEach(t),Pt=B(E),se=l(E,"TR",{});var Ws=n(se);qe=l(Ws,"TD",{});var Xa=n(qe);gt=p(Xa,"int32"),Xa.forEach(t),Ht=B(Ws),ze=l(Ws,"TD",{});var Ya=n(ze);St=p(Ya,"A whole number (32bit)"),Ya.forEach(t),Ws.forEach(t),Rt=B(E),te=l(E,"TR",{});var Xs=n(te);Le=l(Xs,"TD",{});var Za=n(Le);Ot=p(Za,"int64"),Za.forEach(t),Nt=B(Xs),Ue=l(Xs,"TD",{});var Ga=n(Ue);It=p(Ga,"A whole number (64bit)"),Ga.forEach(t),Xs.forEach(t),jt=B(E),ae=l(E,"TR",{});var Ys=n(ae);We=l(Ys,"TD",{});var Ja=n(We);Mt=p(Ja,"float"),Ja.forEach(t),Vt=B(Ys),Xe=l(Ys,"TD",{});var Ka=n(Xe);qt=p(Ka,"A floating point number (32bit)"),Ka.forEach(t),Ys.forEach(t),zt=B(E),le=l(E,"TR",{});var Zs=n(le);Ye=l(Zs,"TD",{});var Qa=n(Ye);Lt=p(Qa,"float32"),Qa.forEach(t),Ut=B(Zs),Ze=l(Zs,"TD",{});var el=n(Ze);Wt=p(el,"A floating point number (32bit)"),el.forEach(t),Zs.forEach(t),Xt=B(E),ne=l(E,"TR",{});var Gs=n(ne);Ge=l(Gs,"TD",{});var sl=n(Ge);Yt=p(sl,"float64"),sl.forEach(t),Zt=B(Gs),Je=l(Gs,"TD",{});var tl=n(Je);Gt=p(tl,"A floating point number (64bit)"),tl.forEach(t),Gs.forEach(t),Jt=B(E),oe=l(E,"TR",{});var Js=n(oe);Ke=l(Js,"TD",{});var al=n(Ke);Kt=p(al,"string"),al.forEach(t),Qt=B(Js),Qe=l(Js,"TD",{});var ll=n(Qe);ea=p(ll,"A string of characters"),ll.forEach(t),Js.forEach(t),E.forEach(t),Ms.forEach(t),Ds=B(e),O=l(e,"H3",{id:!0});var Da=n(O);N=l(Da,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var nl=n(N);es=l(nl,"SPAN",{class:!0}),n(es).forEach(t),nl.forEach(t),sa=p(Da,"Enum types"),Da.forEach(t),Cs=B(e),I=l(e,"P",{});var Ks=n(I);ta=p(Ks,"An enum value is a value which is one of a fixed set. Values are separated by a "),ss=l(Ks,"CODE",{});var ol=n(ss);aa=p(ol,"|"),ol.forEach(t),la=p(Ks,"."),Ks.forEach(t),Ts=B(e),pe(j.$$.fragment,e),ws=B(e),A=l(e,"P",{});var F=n(A);na=p(F,"Enums can only contain primitive literals. The value must explicitly be stated. "),ts=l(F,"CODE",{});var rl=n(ts);oa=p(rl,"string"),rl.forEach(t),ra=p(F," or "),as=l(F,"CODE",{});var il=n(as);ia=p(il,"int"),il.forEach(t),pa=p(F," are not allowed, "),ls=l(F,"CODE",{});var pl=n(ls);ca=p(pl,'"test"'),pl.forEach(t),da=p(F," or "),ns=l(F,"CODE",{});var cl=n(ns);fa=p(cl,"69"),cl.forEach(t),ya=p(F," are."),F.forEach(t),xs=B(e),M=l(e,"H3",{id:!0});var Ca=n(M);V=l(Ca,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var dl=n(V);os=l(dl,"SPAN",{class:!0}),n(os).forEach(t),dl.forEach(t),Ba=p(Ca,"Custom types"),Ca.forEach(t),ks=B(e),Ee=l(e,"P",{});var fl=n(Ee);va=p(fl,"Custom types are user defined types consisting of other user defined types or primitive types."),fl.forEach(t),Ps=B(e),pe(q.$$.fragment,e),gs=B(e),z=l(e,"H3",{id:!0});var Ta=n(z);L=l(Ta,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var yl=n(L);rs=l(yl,"SPAN",{class:!0}),n(rs).forEach(t),yl.forEach(t),ua=p(Ta,"Arrays"),Ta.forEach(t),Hs=B(e),U=l(e,"P",{});var Qs=n(U);ma=p(Qs,"Primitive or user defined types can be arrays. Arrays are marked via a "),is=l(Qs,"CODE",{});var Bl=n(is);ha=p(Bl,"[]"),Bl.forEach(t),Ea=p(Qs," behind the type. Arrays can have a fixed size."),Qs.forEach(t),Ss=B(e),pe(W.$$.fragment,e),Rs=B(e),X=l(e,"H3",{id:!0});var wa=n(X);Y=l(wa,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var vl=n(Y);ps=l(vl,"SPAN",{class:!0}),n(ps).forEach(t),vl.forEach(t),_a=p(wa,"Comments"),wa.forEach(t),Os=B(e),_e=l(e,"P",{});var ul=n(_e);Aa=p(ul,"easy-rpc allows for two kinds of comments: Disposeable and documentational. Disposeable comments are ignored while transpiling. Documentational comments are transferred into the generated types and methods."),ul.forEach(t),Ns=B(e),pe(Z.$$.fragment,e),Is=B(e),Ae=l(e,"P",{});var ml=n(Ae);ba=p(ml,"configuration structure (json files)"),ml.forEach(t),this.h()},h(){v(f,"class","icon icon-link"),v(m,"aria-hidden","true"),v(m,"tabindex","-1"),v(m,"href","#easy-rpc-syntax"),v(r,"id","easy-rpc-syntax"),v(Te,"class","icon icon-link"),v(C,"aria-hidden","true"),v(C,"tabindex","-1"),v(C,"href","#endpoints"),v(D,"id","endpoints"),v(ue,"href","#Types"),v(we,"class","icon icon-link"),v(P,"aria-hidden","true"),v(P,"tabindex","-1"),v(P,"href","#types"),v(k,"id","types"),v(xe,"class","icon icon-link"),v(H,"aria-hidden","true"),v(H,"tabindex","-1"),v(H,"href","#primitive-types"),v(g,"id","primitive-types"),v(es,"class","icon icon-link"),v(N,"aria-hidden","true"),v(N,"tabindex","-1"),v(N,"href","#enum-types"),v(O,"id","enum-types"),v(os,"class","icon icon-link"),v(V,"aria-hidden","true"),v(V,"tabindex","-1"),v(V,"href","#custom-types"),v(M,"id","custom-types"),v(rs,"class","icon icon-link"),v(L,"aria-hidden","true"),v(L,"tabindex","-1"),v(L,"href","#arrays"),v(z,"id","arrays"),v(ps,"class","icon icon-link"),v(Y,"aria-hidden","true"),v(Y,"tabindex","-1"),v(Y,"href","#comments"),v(X,"id","comments")},m(e,o){d(e,r,o),s(r,m),s(m,f),s(r,c),d(e,u,o),d(e,b,o),s(b,Be),d(e,vs,o),d(e,D,o),s(D,C),s(C,Te),s(D,et),d(e,us,o),d(e,ve,o),s(ve,st),d(e,ms,o),ce(T,e,o),d(e,hs,o),d(e,w,o),s(w,tt),s(w,ue),s(ue,at),s(w,lt),d(e,Es,o),ce(x,e,o),d(e,_s,o),d(e,k,o),s(k,P),s(P,we),s(k,nt),d(e,As,o),d(e,me,o),s(me,ot),d(e,bs,o),d(e,g,o),s(g,H),s(H,xe),s(g,rt),d(e,$s,o),d(e,he,o),s(he,it),d(e,Fs,o),d(e,S,o),s(S,ke),s(ke,G),s(G,Pe),s(Pe,pt),s(G,ct),s(G,ge),s(ge,dt),s(S,ft),s(S,h),s(h,J),s(J,He),s(He,yt),s(J,Bt),s(J,R),s(R,vt),s(R,Se),s(Se,ut),s(R,mt),s(R,Re),s(Re,ht),s(h,Et),s(h,K),s(K,Oe),s(Oe,_t),s(K,At),s(K,Ne),s(Ne,bt),s(h,$t),s(h,Q),s(Q,Ie),s(Ie,Ft),s(Q,Dt),s(Q,je),s(je,Ct),s(h,Tt),s(h,ee),s(ee,Me),s(Me,wt),s(ee,xt),s(ee,Ve),s(Ve,kt),s(h,Pt),s(h,se),s(se,qe),s(qe,gt),s(se,Ht),s(se,ze),s(ze,St),s(h,Rt),s(h,te),s(te,Le),s(Le,Ot),s(te,Nt),s(te,Ue),s(Ue,It),s(h,jt),s(h,ae),s(ae,We),s(We,Mt),s(ae,Vt),s(ae,Xe),s(Xe,qt),s(h,zt),s(h,le),s(le,Ye),s(Ye,Lt),s(le,Ut),s(le,Ze),s(Ze,Wt),s(h,Xt),s(h,ne),s(ne,Ge),s(Ge,Yt),s(ne,Zt),s(ne,Je),s(Je,Gt),s(h,Jt),s(h,oe),s(oe,Ke),s(Ke,Kt),s(oe,Qt),s(oe,Qe),s(Qe,ea),d(e,Ds,o),d(e,O,o),s(O,N),s(N,es),s(O,sa),d(e,Cs,o),d(e,I,o),s(I,ta),s(I,ss),s(ss,aa),s(I,la),d(e,Ts,o),ce(j,e,o),d(e,ws,o),d(e,A,o),s(A,na),s(A,ts),s(ts,oa),s(A,ra),s(A,as),s(as,ia),s(A,pa),s(A,ls),s(ls,ca),s(A,da),s(A,ns),s(ns,fa),s(A,ya),d(e,xs,o),d(e,M,o),s(M,V),s(V,os),s(M,Ba),d(e,ks,o),d(e,Ee,o),s(Ee,va),d(e,Ps,o),ce(q,e,o),d(e,gs,o),d(e,z,o),s(z,L),s(L,rs),s(z,ua),d(e,Hs,o),d(e,U,o),s(U,ma),s(U,is),s(is,ha),s(U,Ea),d(e,Ss,o),ce(W,e,o),d(e,Rs,o),d(e,X,o),s(X,Y),s(Y,ps),s(X,_a),d(e,Os,o),d(e,_e,o),s(_e,Aa),d(e,Ns,o),ce(Z,e,o),d(e,Is,o),d(e,Ae,o),s(Ae,ba),js=!0},p(e,o){const cs={};o&2&&(cs.$$scope={dirty:o,ctx:e}),T.$set(cs);const ds={};o&2&&(ds.$$scope={dirty:o,ctx:e}),x.$set(ds);const be={};o&2&&(be.$$scope={dirty:o,ctx:e}),j.$set(be);const fs={};o&2&&(fs.$$scope={dirty:o,ctx:e}),q.$set(fs);const ys={};o&2&&(ys.$$scope={dirty:o,ctx:e}),W.$set(ys);const re={};o&2&&(re.$$scope={dirty:o,ctx:e}),Z.$set(re)},i(e){js||(de(T.$$.fragment,e),de(x.$$.fragment,e),de(j.$$.fragment,e),de(q.$$.fragment,e),de(W.$$.fragment,e),de(Z.$$.fragment,e),js=!0)},o(e){fe(T.$$.fragment,e),fe(x.$$.fragment,e),fe(j.$$.fragment,e),fe(q.$$.fragment,e),fe(W.$$.fragment,e),fe(Z.$$.fragment,e),js=!1},d(e){e&&t(r),e&&t(u),e&&t(b),e&&t(vs),e&&t(D),e&&t(us),e&&t(ve),e&&t(ms),ye(T,e),e&&t(hs),e&&t(w),e&&t(Es),ye(x,e),e&&t(_s),e&&t(k),e&&t(As),e&&t(me),e&&t(bs),e&&t(g),e&&t($s),e&&t(he),e&&t(Fs),e&&t(S),e&&t(Ds),e&&t(O),e&&t(Cs),e&&t(I),e&&t(Ts),ye(j,e),e&&t(ws),e&&t(A),e&&t(xs),e&&t(M),e&&t(ks),e&&t(Ee),e&&t(Ps),ye(q,e),e&&t(gs),e&&t(z),e&&t(Hs),e&&t(U),e&&t(Ss),ye(W,e),e&&t(Rs),e&&t(X),e&&t(Os),e&&t(_e),e&&t(Ns),ye(Z,e),e&&t(Is),e&&t(Ae)}}}function gl(_){let r,m;const f=[_[0]];let c={$$slots:{default:[Pl]},$$scope:{ctx:_}};for(let u=0;u<f.length;u+=1)c=xa(c,f[u]);return r=new Fl({props:c}),{c(){ie(r.$$.fragment)},l(u){pe(r.$$.fragment,u)},m(u,b){ce(r,u,b),m=!0},p(u,[b]){const Be=b&1?bl(f,[$l(u[0])]):{};b&2&&(Be.$$scope={dirty:b,ctx:u}),r.$set(Be)},i(u){m||(de(r.$$.fragment,u),m=!0)},o(u){fe(r.$$.fragment,u),m=!1},d(u){ye(r,u)}}}function Hl(_,r,m){return _.$$set=f=>{m(0,r=xa(xa({},r),hl(f)))},r=hl(r),[r]}class Nl extends El{constructor(r){super(),_l(this,r,Hl,gl,Al,{})}}export{Nl as default};
