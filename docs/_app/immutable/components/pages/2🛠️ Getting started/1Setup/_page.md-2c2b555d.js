import{S as Ga,i as Va,s as qa,U as ql,v as B,w as k,x as E,V as za,W as Ja,f as A,t as F,y as C,X as Wa,k as r,q as l,a as v,l as c,m as d,h as s,r as a,c as y,n as h,b as p,D as t,Z as S,e as _,_ as I,E as N}from"../../../../chunks/index-7ac94c92.js";import{P as Ya}from"../../../../chunks/Page-c0f2c207.js";import{C as P}from"../../../../chunks/Code-6d2e2b36.js";function Ma(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class='code-container'><code><div class='line'><span style="color: undefined">webapp</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 frontend</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 backend</span></div><div class='line'><span style="color: undefined">\u2514\u2500\u2500 sources</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function Ua(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">[</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Frontend"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"browser"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Backend"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"http-server"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	}</span></div><div class='line'><span style="color: #ABB2BF">]</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function Xa(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ping</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">msg</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #E5C07B">Frontend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ping</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">msg</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function Za(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class='code-container'><code><div class='line'><span style="color: undefined">webapp</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 frontend</span></div><div class='line'><span style="color: undefined">\u2502</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 backend</span></div><div class='line'><span style="color: undefined">\u2502</span></div><div class='line'><span style="color: undefined">\u2514\u2500\u2500 sources</span></div><div class='line'><span style="color: undefined">    \u251C\u2500\u2500 api.erpc</span></div><div class='line'><span style="color: undefined">    \u2514\u2500\u2500 roles.json</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function Ka(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm i @easy-rpc/node</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function La(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm i ts-node</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function Qa(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">{</span></div><div class='line'><span style="color: #ABB2BF">  </span><span style="color: #E06C75">"scripts"</span><span style="color: #ABB2BF">: {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E06C75">"start"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"npx ts-node main.ts"</span></div><div class='line'><span style="color: #ABB2BF">  },</span></div><div class='line'><span style="color: #ABB2BF">  </span><span style="color: #E06C75">"dependencies"</span><span style="color: #ABB2BF">: {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E06C75">"@easy-rpc/node"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"latest"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E06C75">"ts-node"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"latest"</span></div><div class='line'><span style="color: #ABB2BF">  }</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function en(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">{</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E06C75">"sources"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"../sources"</span><span style="color: #ABB2BF">],</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E06C75">"role"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Backend"</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function sn(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class='code-container'><code><div class='line'><span style="color: undefined">webapp</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 frontend</span></div><div class='line'><span style="color: undefined">\u2502</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 backend</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 node_modules</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u2514\u2500\u2500 ...</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 erpc.json</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 main.ts</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 package-lock.json</span></div><div class='line'><span style="color: undefined">\u2502   \u2514\u2500\u2500 package.json</span></div><div class='line'><span style="color: undefined">\u2502</span></div><div class='line'><span style="color: undefined">\u2514\u2500\u2500 sources</span></div><div class='line'><span style="color: undefined">    \u251C\u2500\u2500 api.erpc</span></div><div class='line'><span style="color: undefined">    \u2514\u2500\u2500 roles.json</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function tn(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm create vite@latest </span><span style="color: #56B6C2">.</span><span style="color: #ABB2BF"> -- --template vanilla-ts</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function on(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm i @easy-rpc/browser</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function ln(w){let i,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class='code-container'><code><div class='line'><span style="color: undefined">webapp</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 frontend</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 node_modules</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u2514\u2500\u2500 ...</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 public</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u2514\u2500\u2500 vite.svg</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 src</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u251C\u2500\u2500 counter.ts</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u251C\u2500\u2500 main.ts</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u251C\u2500\u2500 style.css</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u251C\u2500\u2500 typescript.svg</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u2514\u2500\u2500 vite-env.d.ts</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 .gitignore</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 index.html</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 package-lock.json</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 package.json</span></div><div class='line'><span style="color: undefined">\u2502   \u2514\u2500\u2500 tsconfig.json</span></div><div class='line'><span style="color: undefined">\u2502</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 backend</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 node_modules</span></div><div class='line'><span style="color: undefined">\u2502   \u2502   \u2514\u2500\u2500 ...</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 erpc.json</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 main.ts</span></div><div class='line'><span style="color: undefined">\u2502   \u251C\u2500\u2500 package-lock.json</span></div><div class='line'><span style="color: undefined">\u2502   \u2514\u2500\u2500 package.json</span></div><div class='line'><span style="color: undefined">\u2502</span></div><div class='line'><span style="color: undefined">\u2514\u2500\u2500 sources</span></div><div class='line'><span style="color: undefined">    \u251C\u2500\u2500 api.erpc</span></div><div class='line'><span style="color: undefined">    \u2514\u2500\u2500 roles.json</span></div></code></div></pre>`,f;return{c(){i=new S(!1),f=_(),this.h()},l(n){i=I(n,!1),f=_(),this.h()},h(){i.a=f},m(n,u){i.m(m,n,u),p(n,f,u)},p:N,d(n){n&&s(f),n&&i.d()}}}function an(w){let i,m,f,n,u,T,Pe,zs,V,q,Ue,Vt,Js,z,qt,Xe,Ce,zt,Jt,Ys,Se,Yt,Ms,J,Y,Ze,Mt,Us,M,Ut,Ke,Xt,Zt,Xs,j,Kt,Le,Ie,Lt,Qt,Qe,eo,so,es,to,oo,Zs,U,lo,ss,ao,no,Ks,Ne,io,Ls,X,Qs,Z,K,ts,ro,et,G,co,os,po,fo,ls,uo,st,g,ho,as,vo,yo,ns,Re,mo,wo,is,_o,bo,tt,L,ot,b,$o,rs,Bo,ko,cs,He,Eo,Ao,ds,Fo,Co,ps,To,jo,lt,Q,at,We,go,nt,ee,it,se,te,fs,xo,rt,oe,Do,us,Oo,Po,ct,le,dt,$,So,hs,Io,No,vs,Ro,Ho,ys,Wo,Go,ms,Vo,qo,pt,x,zo,ws,Jo,Yo,Ge,Mo,Uo,_s,Xo,Zo,ft,ae,Ko,bs,Lo,Qo,ut,ne,ht,D,el,$s,sl,tl,Bs,ol,ll,ks,al,nl,vt,ie,yt,re,il,Es,rl,cl,mt,ce,wt,de,dl,As,pl,fl,_t,pe,ul,Fs,hl,vl,bt,Ve,yl,$t,fe,Bt,ue,he,Cs,ml,kt,R,wl,Te,_l,bl,Ts,$l,Bl,Et,ve,At,qe,kl,Ft,ye,El,js,Al,Fl,Ct,me,Tt,we,Cl,gs,Tl,jl,jt,ze,gl,gt,_e,xt,be,$e,xs,xl,Dt,O,Dl,Ds,je,Ol,Pl,Os,ge,Sl,Il,Ps,xe,Nl,Rl,Ot;return X=new P({props:{$$slots:{default:[Ma]},$$scope:{ctx:w}}}),L=new P({props:{filename:"/webapp/sources/roles.json",$$slots:{default:[Ua]},$$scope:{ctx:w}}}),Q=new P({props:{filename:"/webapp/sources/api.erpc",$$slots:{default:[Xa]},$$scope:{ctx:w}}}),ee=new P({props:{$$slots:{default:[Za]},$$scope:{ctx:w}}}),le=new P({props:{$$slots:{default:[Ka]},$$scope:{ctx:w}}}),ne=new P({props:{$$slots:{default:[La]},$$scope:{ctx:w}}}),ie=new P({props:{filename:"`/webapp/backend/package.json",$$slots:{default:[Qa]},$$scope:{ctx:w}}}),ce=new P({props:{filename:"/webapp/backend/erpc.json",$$slots:{default:[en]},$$scope:{ctx:w}}}),fe=new P({props:{$$slots:{default:[sn]},$$scope:{ctx:w}}}),ve=new P({props:{$$slots:{default:[tn]},$$scope:{ctx:w}}}),me=new P({props:{$$slots:{default:[on]},$$scope:{ctx:w}}}),_e=new P({props:{$$slots:{default:[ln]},$$scope:{ctx:w}}}),{c(){i=r("h1"),m=r("a"),f=r("span"),n=l("Setting up easy-rpc"),u=v(),T=r("p"),Pe=l("There are two ways to get started with easy-rpc. The template is a little easier, but doesn\u2019t teach you a lot about the file structure, configuration and setup. The step by step guide to create the project manually takes slightly more time but explains what needs to be where and how easy-rpc can be configured. For first time users it is recommended to create the project manually."),zs=v(),V=r("h2"),q=r("a"),Ue=r("span"),Vt=l("Template"),Js=v(),z=r("p"),qt=l("Clone it from "),Xe=r("strong"),Ce=r("a"),zt=l("here (https://github.com/m1212e/easy-rpc-project-template)"),Jt=l("."),Ys=v(),Se=r("p"),Yt=l("The README.md files in the template explain the setup and what can be found where."),Ms=v(),J=r("h2"),Y=r("a"),Ze=r("span"),Mt=l("Creating the project manually"),Us=v(),M=r("p"),Ut=l("First, choose a directory you want to create the project in. In this example we will create the directory "),Ke=r("code"),Xt=l("/webapp"),Zt=l("."),Xs=v(),j=r("p"),Kt=l("Now think about which roles you need for this project. If you are not familiar with the concept of easy-rpc roles, you can read about them "),Le=r("strong"),Ie=r("a"),Lt=l("here"),Qt=l(". The question you need to ask yourself is: what entities exist in this project and what is their purpose. Depending on your scenario you can choose multiple browser and http-server roles. In our case we want a simple webapp setup consisting of one kind of server and one kind of client. We\u2019ll call them \u201CBackend\u201D and \u201CFrontend\u201D. We create directories accordingly: "),Qe=r("code"),eo=l("/webapp/frontend"),so=l(", "),es=r("code"),to=l("/webapp/backend"),oo=l("."),Zs=v(),U=r("p"),lo=l("After creating directories for our roles, we need a directory to store our source files which contain the information about the actual endpoints which are offered by each role. Both, frontend and backend can access the sources and generate the code to call the endpoints accordingly. In this example we will use the "),ss=r("code"),ao=l("/webapp/sources"),no=l(" directory for that."),Ks=v(),Ne=r("p"),io=l("Our current structure looks like this"),Ls=v(),B(X.$$.fragment),Qs=v(),Z=r("h3"),K=r("a"),ts=r("span"),ro=l("Sources"),et=v(),G=r("p"),co=l("Adding the sources and configuring them is done quickly by creating two files: "),os=r("code"),po=l("/webapp/sources/api.erpc"),fo=l(" and "),ls=r("code"),uo=l("/webapp/sources/roles.json"),st=v(),g=r("p"),ho=l("The "),as=r("code"),vo=l("roles.json"),yo=l(" defines, which roles exist for this source directory. We tell easy-rpc that there are two roles and what type these roles have. See the "),ns=r("strong"),Re=r("a"),mo=l("syntax section"),wo=l(" for more information on what configuration options are possible and how the "),is=r("code"),_o=l("roles.json"),bo=l(" should be structured."),tt=v(),B(L.$$.fragment),ot=v(),b=r("p"),$o=l("The "),rs=r("code"),Bo=l("api.erpc"),ko=l(" file defines two endpoints, one on each role. If you are not familiar with easy-rpc syntax, see the "),cs=r("strong"),He=r("a"),Eo=l("syntax section"),Ao=l(". Ofcourse you can add more "),ds=r("code"),Fo=l(".erpc"),Co=l(" files or more endpoints to the "),ps=r("code"),To=l("api.erpc"),jo=l(" file to suit the needs of you app."),lt=v(),B(Q.$$.fragment),at=v(),We=r("p"),go=l("The sources directory is now set up. We configured two roles and gave them one endpoint each. The file structure now looks like this"),nt=v(),B(ee.$$.fragment),it=v(),se=r("h3"),te=r("a"),fs=r("span"),xo=l("Backend"),rt=v(),oe=r("p"),Do=l("As configured in the sources directory, our backend will function as an http-server. To do this we need an npm package. Install it inside "),us=r("code"),Oo=l("/webapp/backend"),Po=l(" with"),ct=v(),B(le.$$.fragment),dt=v(),$=r("p"),So=l("This should create a "),hs=r("code"),Io=l("package.json"),No=l(" and "),vs=r("code"),Ro=l("package-lock.json"),Ho=l(" file where you can see the added dependency. Internally, the server code is written in Rust. The installed package is an adapter to make the Rust code useable from JavaScript. The used native "),ys=r("code"),Wo=l(".node"),Go=l(" file will be downloaded and stored into your "),ms=r("code"),Vo=l("node_modules"),qo=l(" directory. Some bundlers cannot handle these kind of packages by default, keep this in mind when you use a bundler tool."),pt=v(),x=r("p"),zo=l("To make use of the generated TypeScript code, we need a way to run TypeScript. "),ws=r("code"),Jo=l("ts-node"),Yo=l(" is a package which allows us to do this without much configuration. But you can use any other tool you want. The "),Ge=r("a"),Mo=l("template"),Uo=l(" uses "),_s=r("code"),Xo=l("esbuild"),Zo=l(" to process and run TypeScript."),ft=v(),ae=r("p"),Ko=l("Install "),bs=r("code"),Lo=l("ts-node"),Qo=l(" it with"),ut=v(),B(ne.$$.fragment),ht=v(),D=r("p"),el=l("For convenience you can add a script inside the "),$s=r("code"),sl=l("package.json"),tl=l(" which will start a "),Bs=r("code"),ol=l("main.ts"),ll=l(" file which we still have to create. The whole "),ks=r("code"),al=l("package.json"),nl=l(" now looks like this"),vt=v(),B(ie.$$.fragment),yt=v(),re=r("p"),il=l("Now we create the "),Es=r("code"),rl=l("/webapp/backend/erpc.json"),cl=l(". This file tells easy-rpc that this directory is meant to be an easy-rpc role implementation. The file looks like this"),mt=v(),B(ce.$$.fragment),wt=v(),de=r("p"),dl=l("In the sources array we can configure all source directories which should be used. In our case there is only one. The role parameter tells easy-rpc which role should be used for generation. It must match one of those configured in "),As=r("code"),pl=l("/webapp/sources/roles.json"),fl=l("."),_t=v(),pe=r("p"),ul=l("Finally, we create the "),Fs=r("code"),hl=l("/webapp/backend/main.ts"),vl=l(" and leave it empty for now."),bt=v(),Ve=r("p"),yl=l("The directory structure should now look like this"),$t=v(),B(fe.$$.fragment),Bt=v(),ue=r("h3"),he=r("a"),Cs=r("span"),ml=l("Frontend"),kt=v(),R=r("p"),wl=l("It\u2019s recommended to use a bundler tool which optimizes your project when you work on browser apps. In this example "),Te=r("a"),_l=l("vite"),bl=l(" is used, but you can use other frameworks or tools you prefer. Set up vite inside "),Ts=r("code"),$l=l("/webapp/frontend"),Bl=l(" with"),Et=v(),B(ve.$$.fragment),At=v(),qe=r("p"),kl=l("You can just hit enter or customize the package name to your liking when vite asks for it after entering the create command."),Ft=v(),ye=r("p"),El=l("The frontend was configured to be a browser. Therefore we need the "),js=r("code"),Al=l("@easy-rpc/browser"),Fl=l(" package to run it. Import it with"),Ct=v(),B(me.$$.fragment),Tt=v(),we=r("p"),Cl=l("Vite did create a few directories which will become handy when developing your webapp. Take a look at the "),gs=r("code"),Tl=l("/webapp/frontend/src"),jl=l(" directory, you will find a few files where we later on will put our code into. A small demo app is automatically created, feel free to delete it."),jt=v(),ze=r("p"),gl=l("The directory structure should now look like this"),gt=v(),B(_e.$$.fragment),xt=v(),be=r("h3"),$e=r("a"),xs=r("span"),xl=l("Vscode extension"),Dt=v(),O=r("p"),Dl=l("Finally, we just need to install the transpiler. You can either find the binaries at "),Ds=r("strong"),je=r("a"),Ol=l("https://github.com/m1212e/easy-rpc/releases"),Pl=l("(instructions for running the binary can be found in the "),Os=r("strong"),ge=r("a"),Sl=l("easy-rpc repository"),Il=l(") or you can use the "),Ps=r("strong"),xe=r("a"),Nl=l("Vscode extension"),Rl=l(". Just install it and you\u2019re good to go."),this.h()},l(e){i=c(e,"H1",{id:!0});var o=d(i);m=c(o,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ss=d(m);f=c(Ss,"SPAN",{class:!0}),d(f).forEach(s),Ss.forEach(s),n=a(o,"Setting up easy-rpc"),o.forEach(s),u=y(e),T=c(e,"P",{});var Is=d(T);Pe=a(Is,"There are two ways to get started with easy-rpc. The template is a little easier, but doesn\u2019t teach you a lot about the file structure, configuration and setup. The step by step guide to create the project manually takes slightly more time but explains what needs to be where and how easy-rpc can be configured. For first time users it is recommended to create the project manually."),Is.forEach(s),zs=y(e),V=c(e,"H2",{id:!0});var Je=d(V);q=c(Je,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ns=d(q);Ue=c(Ns,"SPAN",{class:!0}),d(Ue).forEach(s),Ns.forEach(s),Vt=a(Je,"Template"),Je.forEach(s),Js=y(e),z=c(e,"P",{});var De=d(z);qt=a(De,"Clone it from "),Xe=c(De,"STRONG",{});var Rs=d(Xe);Ce=c(Rs,"A",{href:!0,rel:!0});var Hs=d(Ce);zt=a(Hs,"here (https://github.com/m1212e/easy-rpc-project-template)"),Hs.forEach(s),Rs.forEach(s),Jt=a(De,"."),De.forEach(s),Ys=y(e),Se=c(e,"P",{});var Ws=d(Se);Yt=a(Ws,"The README.md files in the template explain the setup and what can be found where."),Ws.forEach(s),Ms=y(e),J=c(e,"H2",{id:!0});var Ye=d(J);Y=c(Ye,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Gs=d(Y);Ze=c(Gs,"SPAN",{class:!0}),d(Ze).forEach(s),Gs.forEach(s),Mt=a(Ye,"Creating the project manually"),Ye.forEach(s),Us=y(e),M=c(e,"P",{});var Oe=d(M);Ut=a(Oe,"First, choose a directory you want to create the project in. In this example we will create the directory "),Ke=c(Oe,"CODE",{});var Vs=d(Ke);Xt=a(Vs,"/webapp"),Vs.forEach(s),Zt=a(Oe,"."),Oe.forEach(s),Xs=y(e),j=c(e,"P",{});var Be=d(j);Kt=a(Be,"Now think about which roles you need for this project. If you are not familiar with the concept of easy-rpc roles, you can read about them "),Le=c(Be,"STRONG",{});var zl=d(Le);Ie=c(zl,"A",{href:!0});var Jl=d(Ie);Lt=a(Jl,"here"),Jl.forEach(s),zl.forEach(s),Qt=a(Be,". The question you need to ask yourself is: what entities exist in this project and what is their purpose. Depending on your scenario you can choose multiple browser and http-server roles. In our case we want a simple webapp setup consisting of one kind of server and one kind of client. We\u2019ll call them \u201CBackend\u201D and \u201CFrontend\u201D. We create directories accordingly: "),Qe=c(Be,"CODE",{});var Yl=d(Qe);eo=a(Yl,"/webapp/frontend"),Yl.forEach(s),so=a(Be,", "),es=c(Be,"CODE",{});var Ml=d(es);to=a(Ml,"/webapp/backend"),Ml.forEach(s),oo=a(Be,"."),Be.forEach(s),Zs=y(e),U=c(e,"P",{});var Pt=d(U);lo=a(Pt,"After creating directories for our roles, we need a directory to store our source files which contain the information about the actual endpoints which are offered by each role. Both, frontend and backend can access the sources and generate the code to call the endpoints accordingly. In this example we will use the "),ss=c(Pt,"CODE",{});var Ul=d(ss);ao=a(Ul,"/webapp/sources"),Ul.forEach(s),no=a(Pt," directory for that."),Pt.forEach(s),Ks=y(e),Ne=c(e,"P",{});var Xl=d(Ne);io=a(Xl,"Our current structure looks like this"),Xl.forEach(s),Ls=y(e),k(X.$$.fragment,e),Qs=y(e),Z=c(e,"H3",{id:!0});var Hl=d(Z);K=c(Hl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Zl=d(K);ts=c(Zl,"SPAN",{class:!0}),d(ts).forEach(s),Zl.forEach(s),ro=a(Hl,"Sources"),Hl.forEach(s),et=y(e),G=c(e,"P",{});var qs=d(G);co=a(qs,"Adding the sources and configuring them is done quickly by creating two files: "),os=c(qs,"CODE",{});var Kl=d(os);po=a(Kl,"/webapp/sources/api.erpc"),Kl.forEach(s),fo=a(qs," and "),ls=c(qs,"CODE",{});var Ll=d(ls);uo=a(Ll,"/webapp/sources/roles.json"),Ll.forEach(s),qs.forEach(s),st=y(e),g=c(e,"P",{});var ke=d(g);ho=a(ke,"The "),as=c(ke,"CODE",{});var Ql=d(as);vo=a(Ql,"roles.json"),Ql.forEach(s),yo=a(ke," defines, which roles exist for this source directory. We tell easy-rpc that there are two roles and what type these roles have. See the "),ns=c(ke,"STRONG",{});var ea=d(ns);Re=c(ea,"A",{href:!0});var sa=d(Re);mo=a(sa,"syntax section"),sa.forEach(s),ea.forEach(s),wo=a(ke," for more information on what configuration options are possible and how the "),is=c(ke,"CODE",{});var ta=d(is);_o=a(ta,"roles.json"),ta.forEach(s),bo=a(ke," should be structured."),ke.forEach(s),tt=y(e),k(L.$$.fragment,e),ot=y(e),b=c(e,"P",{});var H=d(b);$o=a(H,"The "),rs=c(H,"CODE",{});var oa=d(rs);Bo=a(oa,"api.erpc"),oa.forEach(s),ko=a(H," file defines two endpoints, one on each role. If you are not familiar with easy-rpc syntax, see the "),cs=c(H,"STRONG",{});var la=d(cs);He=c(la,"A",{href:!0});var aa=d(He);Eo=a(aa,"syntax section"),aa.forEach(s),la.forEach(s),Ao=a(H,". Ofcourse you can add more "),ds=c(H,"CODE",{});var na=d(ds);Fo=a(na,".erpc"),na.forEach(s),Co=a(H," files or more endpoints to the "),ps=c(H,"CODE",{});var ia=d(ps);To=a(ia,"api.erpc"),ia.forEach(s),jo=a(H," file to suit the needs of you app."),H.forEach(s),lt=y(e),k(Q.$$.fragment,e),at=y(e),We=c(e,"P",{});var ra=d(We);go=a(ra,"The sources directory is now set up. We configured two roles and gave them one endpoint each. The file structure now looks like this"),ra.forEach(s),nt=y(e),k(ee.$$.fragment,e),it=y(e),se=c(e,"H3",{id:!0});var Wl=d(se);te=c(Wl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ca=d(te);fs=c(ca,"SPAN",{class:!0}),d(fs).forEach(s),ca.forEach(s),xo=a(Wl,"Backend"),Wl.forEach(s),rt=y(e),oe=c(e,"P",{});var St=d(oe);Do=a(St,"As configured in the sources directory, our backend will function as an http-server. To do this we need an npm package. Install it inside "),us=c(St,"CODE",{});var da=d(us);Oo=a(da,"/webapp/backend"),da.forEach(s),Po=a(St," with"),St.forEach(s),ct=y(e),k(le.$$.fragment,e),dt=y(e),$=c(e,"P",{});var W=d($);So=a(W,"This should create a "),hs=c(W,"CODE",{});var pa=d(hs);Io=a(pa,"package.json"),pa.forEach(s),No=a(W," and "),vs=c(W,"CODE",{});var fa=d(vs);Ro=a(fa,"package-lock.json"),fa.forEach(s),Ho=a(W," file where you can see the added dependency. Internally, the server code is written in Rust. The installed package is an adapter to make the Rust code useable from JavaScript. The used native "),ys=c(W,"CODE",{});var ua=d(ys);Wo=a(ua,".node"),ua.forEach(s),Go=a(W," file will be downloaded and stored into your "),ms=c(W,"CODE",{});var ha=d(ms);Vo=a(ha,"node_modules"),ha.forEach(s),qo=a(W," directory. Some bundlers cannot handle these kind of packages by default, keep this in mind when you use a bundler tool."),W.forEach(s),pt=y(e),x=c(e,"P",{});var Ee=d(x);zo=a(Ee,"To make use of the generated TypeScript code, we need a way to run TypeScript. "),ws=c(Ee,"CODE",{});var va=d(ws);Jo=a(va,"ts-node"),va.forEach(s),Yo=a(Ee," is a package which allows us to do this without much configuration. But you can use any other tool you want. The "),Ge=c(Ee,"A",{href:!0});var ya=d(Ge);Mo=a(ya,"template"),ya.forEach(s),Uo=a(Ee," uses "),_s=c(Ee,"CODE",{});var ma=d(_s);Xo=a(ma,"esbuild"),ma.forEach(s),Zo=a(Ee," to process and run TypeScript."),Ee.forEach(s),ft=y(e),ae=c(e,"P",{});var It=d(ae);Ko=a(It,"Install "),bs=c(It,"CODE",{});var wa=d(bs);Lo=a(wa,"ts-node"),wa.forEach(s),Qo=a(It," it with"),It.forEach(s),ut=y(e),k(ne.$$.fragment,e),ht=y(e),D=c(e,"P",{});var Ae=d(D);el=a(Ae,"For convenience you can add a script inside the "),$s=c(Ae,"CODE",{});var _a=d($s);sl=a(_a,"package.json"),_a.forEach(s),tl=a(Ae," which will start a "),Bs=c(Ae,"CODE",{});var ba=d(Bs);ol=a(ba,"main.ts"),ba.forEach(s),ll=a(Ae," file which we still have to create. The whole "),ks=c(Ae,"CODE",{});var $a=d(ks);al=a($a,"package.json"),$a.forEach(s),nl=a(Ae," now looks like this"),Ae.forEach(s),vt=y(e),k(ie.$$.fragment,e),yt=y(e),re=c(e,"P",{});var Nt=d(re);il=a(Nt,"Now we create the "),Es=c(Nt,"CODE",{});var Ba=d(Es);rl=a(Ba,"/webapp/backend/erpc.json"),Ba.forEach(s),cl=a(Nt,". This file tells easy-rpc that this directory is meant to be an easy-rpc role implementation. The file looks like this"),Nt.forEach(s),mt=y(e),k(ce.$$.fragment,e),wt=y(e),de=c(e,"P",{});var Rt=d(de);dl=a(Rt,"In the sources array we can configure all source directories which should be used. In our case there is only one. The role parameter tells easy-rpc which role should be used for generation. It must match one of those configured in "),As=c(Rt,"CODE",{});var ka=d(As);pl=a(ka,"/webapp/sources/roles.json"),ka.forEach(s),fl=a(Rt,"."),Rt.forEach(s),_t=y(e),pe=c(e,"P",{});var Ht=d(pe);ul=a(Ht,"Finally, we create the "),Fs=c(Ht,"CODE",{});var Ea=d(Fs);hl=a(Ea,"/webapp/backend/main.ts"),Ea.forEach(s),vl=a(Ht," and leave it empty for now."),Ht.forEach(s),bt=y(e),Ve=c(e,"P",{});var Aa=d(Ve);yl=a(Aa,"The directory structure should now look like this"),Aa.forEach(s),$t=y(e),k(fe.$$.fragment,e),Bt=y(e),ue=c(e,"H3",{id:!0});var Gl=d(ue);he=c(Gl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Fa=d(he);Cs=c(Fa,"SPAN",{class:!0}),d(Cs).forEach(s),Fa.forEach(s),ml=a(Gl,"Frontend"),Gl.forEach(s),kt=y(e),R=c(e,"P",{});var Me=d(R);wl=a(Me,"It\u2019s recommended to use a bundler tool which optimizes your project when you work on browser apps. In this example "),Te=c(Me,"A",{href:!0,rel:!0});var Ca=d(Te);_l=a(Ca,"vite"),Ca.forEach(s),bl=a(Me," is used, but you can use other frameworks or tools you prefer. Set up vite inside "),Ts=c(Me,"CODE",{});var Ta=d(Ts);$l=a(Ta,"/webapp/frontend"),Ta.forEach(s),Bl=a(Me," with"),Me.forEach(s),Et=y(e),k(ve.$$.fragment,e),At=y(e),qe=c(e,"P",{});var ja=d(qe);kl=a(ja,"You can just hit enter or customize the package name to your liking when vite asks for it after entering the create command."),ja.forEach(s),Ft=y(e),ye=c(e,"P",{});var Wt=d(ye);El=a(Wt,"The frontend was configured to be a browser. Therefore we need the "),js=c(Wt,"CODE",{});var ga=d(js);Al=a(ga,"@easy-rpc/browser"),ga.forEach(s),Fl=a(Wt," package to run it. Import it with"),Wt.forEach(s),Ct=y(e),k(me.$$.fragment,e),Tt=y(e),we=c(e,"P",{});var Gt=d(we);Cl=a(Gt,"Vite did create a few directories which will become handy when developing your webapp. Take a look at the "),gs=c(Gt,"CODE",{});var xa=d(gs);Tl=a(xa,"/webapp/frontend/src"),xa.forEach(s),jl=a(Gt," directory, you will find a few files where we later on will put our code into. A small demo app is automatically created, feel free to delete it."),Gt.forEach(s),jt=y(e),ze=c(e,"P",{});var Da=d(ze);gl=a(Da,"The directory structure should now look like this"),Da.forEach(s),gt=y(e),k(_e.$$.fragment,e),xt=y(e),be=c(e,"H3",{id:!0});var Vl=d(be);$e=c(Vl,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Oa=d($e);xs=c(Oa,"SPAN",{class:!0}),d(xs).forEach(s),Oa.forEach(s),xl=a(Vl,"Vscode extension"),Vl.forEach(s),Dt=y(e),O=c(e,"P",{});var Fe=d(O);Dl=a(Fe,"Finally, we just need to install the transpiler. You can either find the binaries at "),Ds=c(Fe,"STRONG",{});var Pa=d(Ds);je=c(Pa,"A",{href:!0,rel:!0});var Sa=d(je);Ol=a(Sa,"https://github.com/m1212e/easy-rpc/releases"),Sa.forEach(s),Pa.forEach(s),Pl=a(Fe,"(instructions for running the binary can be found in the "),Os=c(Fe,"STRONG",{});var Ia=d(Os);ge=c(Ia,"A",{href:!0,rel:!0});var Na=d(ge);Sl=a(Na,"easy-rpc repository"),Na.forEach(s),Ia.forEach(s),Il=a(Fe,") or you can use the "),Ps=c(Fe,"STRONG",{});var Ra=d(Ps);xe=c(Ra,"A",{href:!0,rel:!0});var Ha=d(xe);Nl=a(Ha,"Vscode extension"),Ha.forEach(s),Ra.forEach(s),Rl=a(Fe,". Just install it and you\u2019re good to go."),Fe.forEach(s),this.h()},h(){h(f,"class","icon icon-link"),h(m,"aria-hidden","true"),h(m,"tabindex","-1"),h(m,"href","#setting-up-easy-rpc"),h(i,"id","setting-up-easy-rpc"),h(Ue,"class","icon icon-link"),h(q,"aria-hidden","true"),h(q,"tabindex","-1"),h(q,"href","#template"),h(V,"id","template"),h(Ce,"href","https://github.com/m1212e/easy-rpc-project-template"),h(Ce,"rel","nofollow"),h(Ze,"class","icon icon-link"),h(Y,"aria-hidden","true"),h(Y,"tabindex","-1"),h(Y,"href","#creating-the-project-manually"),h(J,"id","creating-the-project-manually"),h(Ie,"href","/easy-rpc-docs/3%F0%9F%8E%AD%20Roles%20and%20Endpoints/"),h(ts,"class","icon icon-link"),h(K,"aria-hidden","true"),h(K,"tabindex","-1"),h(K,"href","#sources"),h(Z,"id","sources"),h(Re,"href","/easy-rpc-docs/4%F0%9F%96%8B%EF%B8%8F%20Syntax/"),h(He,"href","/easy-rpc-docs/4%F0%9F%96%8B%EF%B8%8F%20Syntax/"),h(fs,"class","icon icon-link"),h(te,"aria-hidden","true"),h(te,"tabindex","-1"),h(te,"href","#backend"),h(se,"id","backend"),h(Ge,"href","#Template"),h(Cs,"class","icon icon-link"),h(he,"aria-hidden","true"),h(he,"tabindex","-1"),h(he,"href","#frontend"),h(ue,"id","frontend"),h(Te,"href","https://vitejs.dev/"),h(Te,"rel","nofollow"),h(xs,"class","icon icon-link"),h($e,"aria-hidden","true"),h($e,"tabindex","-1"),h($e,"href","#vscode-extension"),h(be,"id","vscode-extension"),h(je,"href","https://github.com/m1212e/easy-rpc/releases"),h(je,"rel","nofollow"),h(ge,"href","https://github.com/m1212e/easy-rpc"),h(ge,"rel","nofollow"),h(xe,"href","https://marketplace.visualstudio.com/items?itemName=easy-rpc.easy-rpc"),h(xe,"rel","nofollow")},m(e,o){p(e,i,o),t(i,m),t(m,f),t(i,n),p(e,u,o),p(e,T,o),t(T,Pe),p(e,zs,o),p(e,V,o),t(V,q),t(q,Ue),t(V,Vt),p(e,Js,o),p(e,z,o),t(z,qt),t(z,Xe),t(Xe,Ce),t(Ce,zt),t(z,Jt),p(e,Ys,o),p(e,Se,o),t(Se,Yt),p(e,Ms,o),p(e,J,o),t(J,Y),t(Y,Ze),t(J,Mt),p(e,Us,o),p(e,M,o),t(M,Ut),t(M,Ke),t(Ke,Xt),t(M,Zt),p(e,Xs,o),p(e,j,o),t(j,Kt),t(j,Le),t(Le,Ie),t(Ie,Lt),t(j,Qt),t(j,Qe),t(Qe,eo),t(j,so),t(j,es),t(es,to),t(j,oo),p(e,Zs,o),p(e,U,o),t(U,lo),t(U,ss),t(ss,ao),t(U,no),p(e,Ks,o),p(e,Ne,o),t(Ne,io),p(e,Ls,o),E(X,e,o),p(e,Qs,o),p(e,Z,o),t(Z,K),t(K,ts),t(Z,ro),p(e,et,o),p(e,G,o),t(G,co),t(G,os),t(os,po),t(G,fo),t(G,ls),t(ls,uo),p(e,st,o),p(e,g,o),t(g,ho),t(g,as),t(as,vo),t(g,yo),t(g,ns),t(ns,Re),t(Re,mo),t(g,wo),t(g,is),t(is,_o),t(g,bo),p(e,tt,o),E(L,e,o),p(e,ot,o),p(e,b,o),t(b,$o),t(b,rs),t(rs,Bo),t(b,ko),t(b,cs),t(cs,He),t(He,Eo),t(b,Ao),t(b,ds),t(ds,Fo),t(b,Co),t(b,ps),t(ps,To),t(b,jo),p(e,lt,o),E(Q,e,o),p(e,at,o),p(e,We,o),t(We,go),p(e,nt,o),E(ee,e,o),p(e,it,o),p(e,se,o),t(se,te),t(te,fs),t(se,xo),p(e,rt,o),p(e,oe,o),t(oe,Do),t(oe,us),t(us,Oo),t(oe,Po),p(e,ct,o),E(le,e,o),p(e,dt,o),p(e,$,o),t($,So),t($,hs),t(hs,Io),t($,No),t($,vs),t(vs,Ro),t($,Ho),t($,ys),t(ys,Wo),t($,Go),t($,ms),t(ms,Vo),t($,qo),p(e,pt,o),p(e,x,o),t(x,zo),t(x,ws),t(ws,Jo),t(x,Yo),t(x,Ge),t(Ge,Mo),t(x,Uo),t(x,_s),t(_s,Xo),t(x,Zo),p(e,ft,o),p(e,ae,o),t(ae,Ko),t(ae,bs),t(bs,Lo),t(ae,Qo),p(e,ut,o),E(ne,e,o),p(e,ht,o),p(e,D,o),t(D,el),t(D,$s),t($s,sl),t(D,tl),t(D,Bs),t(Bs,ol),t(D,ll),t(D,ks),t(ks,al),t(D,nl),p(e,vt,o),E(ie,e,o),p(e,yt,o),p(e,re,o),t(re,il),t(re,Es),t(Es,rl),t(re,cl),p(e,mt,o),E(ce,e,o),p(e,wt,o),p(e,de,o),t(de,dl),t(de,As),t(As,pl),t(de,fl),p(e,_t,o),p(e,pe,o),t(pe,ul),t(pe,Fs),t(Fs,hl),t(pe,vl),p(e,bt,o),p(e,Ve,o),t(Ve,yl),p(e,$t,o),E(fe,e,o),p(e,Bt,o),p(e,ue,o),t(ue,he),t(he,Cs),t(ue,ml),p(e,kt,o),p(e,R,o),t(R,wl),t(R,Te),t(Te,_l),t(R,bl),t(R,Ts),t(Ts,$l),t(R,Bl),p(e,Et,o),E(ve,e,o),p(e,At,o),p(e,qe,o),t(qe,kl),p(e,Ft,o),p(e,ye,o),t(ye,El),t(ye,js),t(js,Al),t(ye,Fl),p(e,Ct,o),E(me,e,o),p(e,Tt,o),p(e,we,o),t(we,Cl),t(we,gs),t(gs,Tl),t(we,jl),p(e,jt,o),p(e,ze,o),t(ze,gl),p(e,gt,o),E(_e,e,o),p(e,xt,o),p(e,be,o),t(be,$e),t($e,xs),t(be,xl),p(e,Dt,o),p(e,O,o),t(O,Dl),t(O,Ds),t(Ds,je),t(je,Ol),t(O,Pl),t(O,Os),t(Os,ge),t(ge,Sl),t(O,Il),t(O,Ps),t(Ps,xe),t(xe,Nl),t(O,Rl),Ot=!0},p(e,o){const Ss={};o&2&&(Ss.$$scope={dirty:o,ctx:e}),X.$set(Ss);const Is={};o&2&&(Is.$$scope={dirty:o,ctx:e}),L.$set(Is);const Je={};o&2&&(Je.$$scope={dirty:o,ctx:e}),Q.$set(Je);const Ns={};o&2&&(Ns.$$scope={dirty:o,ctx:e}),ee.$set(Ns);const De={};o&2&&(De.$$scope={dirty:o,ctx:e}),le.$set(De);const Rs={};o&2&&(Rs.$$scope={dirty:o,ctx:e}),ne.$set(Rs);const Hs={};o&2&&(Hs.$$scope={dirty:o,ctx:e}),ie.$set(Hs);const Ws={};o&2&&(Ws.$$scope={dirty:o,ctx:e}),ce.$set(Ws);const Ye={};o&2&&(Ye.$$scope={dirty:o,ctx:e}),fe.$set(Ye);const Gs={};o&2&&(Gs.$$scope={dirty:o,ctx:e}),ve.$set(Gs);const Oe={};o&2&&(Oe.$$scope={dirty:o,ctx:e}),me.$set(Oe);const Vs={};o&2&&(Vs.$$scope={dirty:o,ctx:e}),_e.$set(Vs)},i(e){Ot||(A(X.$$.fragment,e),A(L.$$.fragment,e),A(Q.$$.fragment,e),A(ee.$$.fragment,e),A(le.$$.fragment,e),A(ne.$$.fragment,e),A(ie.$$.fragment,e),A(ce.$$.fragment,e),A(fe.$$.fragment,e),A(ve.$$.fragment,e),A(me.$$.fragment,e),A(_e.$$.fragment,e),Ot=!0)},o(e){F(X.$$.fragment,e),F(L.$$.fragment,e),F(Q.$$.fragment,e),F(ee.$$.fragment,e),F(le.$$.fragment,e),F(ne.$$.fragment,e),F(ie.$$.fragment,e),F(ce.$$.fragment,e),F(fe.$$.fragment,e),F(ve.$$.fragment,e),F(me.$$.fragment,e),F(_e.$$.fragment,e),Ot=!1},d(e){e&&s(i),e&&s(u),e&&s(T),e&&s(zs),e&&s(V),e&&s(Js),e&&s(z),e&&s(Ys),e&&s(Se),e&&s(Ms),e&&s(J),e&&s(Us),e&&s(M),e&&s(Xs),e&&s(j),e&&s(Zs),e&&s(U),e&&s(Ks),e&&s(Ne),e&&s(Ls),C(X,e),e&&s(Qs),e&&s(Z),e&&s(et),e&&s(G),e&&s(st),e&&s(g),e&&s(tt),C(L,e),e&&s(ot),e&&s(b),e&&s(lt),C(Q,e),e&&s(at),e&&s(We),e&&s(nt),C(ee,e),e&&s(it),e&&s(se),e&&s(rt),e&&s(oe),e&&s(ct),C(le,e),e&&s(dt),e&&s($),e&&s(pt),e&&s(x),e&&s(ft),e&&s(ae),e&&s(ut),C(ne,e),e&&s(ht),e&&s(D),e&&s(vt),C(ie,e),e&&s(yt),e&&s(re),e&&s(mt),C(ce,e),e&&s(wt),e&&s(de),e&&s(_t),e&&s(pe),e&&s(bt),e&&s(Ve),e&&s($t),C(fe,e),e&&s(Bt),e&&s(ue),e&&s(kt),e&&s(R),e&&s(Et),C(ve,e),e&&s(At),e&&s(qe),e&&s(Ft),e&&s(ye),e&&s(Ct),C(me,e),e&&s(Tt),e&&s(we),e&&s(jt),e&&s(ze),e&&s(gt),C(_e,e),e&&s(xt),e&&s(be),e&&s(Dt),e&&s(O)}}}function nn(w){let i,m;const f=[w[0]];let n={$$slots:{default:[an]},$$scope:{ctx:w}};for(let u=0;u<f.length;u+=1)n=ql(n,f[u]);return i=new Ya({props:n}),{c(){B(i.$$.fragment)},l(u){k(i.$$.fragment,u)},m(u,T){E(i,u,T),m=!0},p(u,[T]){const Pe=T&1?za(f,[Ja(u[0])]):{};T&2&&(Pe.$$scope={dirty:T,ctx:u}),i.$set(Pe)},i(u){m||(A(i.$$.fragment,u),m=!0)},o(u){F(i.$$.fragment,u),m=!1},d(u){C(i,u)}}}function rn(w,i,m){return w.$$set=f=>{m(0,i=ql(ql({},i),Wa(f)))},i=Wa(i),[i]}class fn extends Ga{constructor(i){super(),Va(this,i,rn,nn,qa,{})}}export{fn as default};
