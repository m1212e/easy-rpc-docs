import{S as xo,i as go,s as Do,U as Us,v as pe,w as de,x as fe,V as So,W as Oo,f as ue,t as he,y as ye,X as Co,k as n,q as a,a as y,Z as Y,l as r,m as i,h as t,r as l,c as v,_ as ee,n as h,b as p,D as s,e as F,E as Ye}from"../../../chunks/index-5459d0c8.js";import{P as Po}from"../../../chunks/Page-f7e08464.js";import{C as Qe}from"../../../chunks/Code-ed1bf0ca.js";function Io(w){let c,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">[</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Frontend"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"browser"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Backend"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"http-server"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	}</span></div><div class='line'><span style="color: #ABB2BF">]</span></div></code></div></pre>`,f;return{c(){c=new Y(!1),f=F(),this.h()},l(d){c=ee(d,!1),f=F(),this.h()},h(){c.a=f},m(d,u){c.m(m,d,u),p(d,f,u)},p:Ye,d(d){d&&t(f),d&&c.d()}}}function No(w){let c,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">Backend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ping</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">msg</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div><div class='line'><span style="color: #E5C07B">Frontend</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ping</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">msg</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">string</span></div></code></div></pre>`,f;return{c(){c=new Y(!1),f=F(),this.h()},l(d){c=ee(d,!1),f=F(),this.h()},h(){c.a=f},m(d,u){c.m(m,d,u),p(d,f,u)},p:Ye,d(d){d&&t(f),d&&c.d()}}}function Ro(w){let c,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm i @easy-rpc/node</span></div></code></div></pre>`,f;return{c(){c=new Y(!1),f=F(),this.h()},l(d){c=ee(d,!1),f=F(),this.h()},h(){c.a=f},m(d,u){c.m(m,d,u),p(d,f,u)},p:Ye,d(d){d&&t(f),d&&c.d()}}}function Wo(w){let c,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm i ts-node</span></div></code></div></pre>`,f;return{c(){c=new Y(!1),f=F(),this.h()},l(d){c=ee(d,!1),f=F(),this.h()},h(){c.a=f},m(d,u){c.m(m,d,u),p(d,f,u)},p:Ye,d(d){d&&t(f),d&&c.d()}}}function Ho(w){let c,m=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">{</span></div><div class='line'><span style="color: #ABB2BF">  </span><span style="color: #E06C75">"scripts"</span><span style="color: #ABB2BF">: {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E06C75">"start"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"npx ts-node main.ts"</span></div><div class='line'><span style="color: #ABB2BF">  },</span></div><div class='line'><span style="color: #ABB2BF">  </span><span style="color: #E06C75">"dependencies"</span><span style="color: #ABB2BF">: {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #E06C75">"ts-node"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"^10.9.1"</span></div><div class='line'><span style="color: #ABB2BF">  }</span></div><div class='line'><span style="color: #ABB2BF">}</span></div><div class='line'></div></code></div></pre>`,f;return{c(){c=new Y(!1),f=F(),this.h()},l(d){c=ee(d,!1),f=F(),this.h()},h(){c.a=f},m(d,u){c.m(m,d,u),p(d,f,u)},p:Ye,d(d){d&&t(f),d&&c.d()}}}function qo(w){let c,m,f,d,u,_,te,et,j,x,ve,jt,tt,g,xt,L,gt,Dt,st,se,St,ot,D,S,me,Ot,at,O,Pt,we,It,Nt,lt,b,Rt,Be,oe,Wt,Ht,_e,qt,Gt,be,Jt,Mt,nt,P,Ut,Ee,Vt,Xt,rt,ae,Zt,it,ke,To=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class='code-container'><code><div class='line'><span style="color: undefined">webapp</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 frontend</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 backend</span></div><div class='line'><span style="color: undefined">\u2514\u2500\u2500 sources</span></div></code></div></pre>`,$e,I,N,Ae,zt,ct,C,Kt,Fe,Lt,Qt,Ce,Yt,pt,E,es,Te,ts,ss,je,le,os,as,xe,ls,ns,dt,R,ft,T,rs,ge,is,cs,De,ne,ps,ut,W,ht,re,ds,yt,Se,jo=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class='code-container'><code><div class='line'><span style="color: undefined">webapp</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 frontend</span></div><div class='line'><span style="color: undefined">\u251C\u2500\u2500 backend</span></div><div class='line'><span style="color: undefined">\u2514\u2500\u2500 sources</span></div><div class='line'><span style="color: undefined">    \u251C\u2500\u2500 api.erpc</span></div><div class='line'><span style="color: undefined">    \u2514\u2500\u2500 roles.json</span></div></code></div></pre>`,Oe,H,q,Pe,fs,vt,G,us,Ie,hs,ys,mt,J,wt,B,vs,Ne,ms,ws,Re,Bs,_s,We,bs,Es,He,ks,$s,Bt,k,As,qe,Fs,Cs,ie,Ts,js,Ge,xs,gs,_t,M,Ds,Je,Ss,Os,bt,U,Et,$,Ps,Me,Is,Ns,Ue,Rs,Ws,Ve,Hs,qs,kt,V,$t;return R=new Qe({props:{filename:"/webapp/sources/roles.json",$$slots:{default:[Io]},$$scope:{ctx:w}}}),W=new Qe({props:{filename:"/webapp/sources/api.erpc",$$slots:{default:[No]},$$scope:{ctx:w}}}),J=new Qe({props:{$$slots:{default:[Ro]},$$scope:{ctx:w}}}),U=new Qe({props:{$$slots:{default:[Wo]},$$scope:{ctx:w}}}),V=new Qe({props:{filename:"package.json",$$slots:{default:[Ho]},$$scope:{ctx:w}}}),{c(){c=n("h1"),m=n("a"),f=n("span"),d=a("Getting started with easy-rpc"),u=y(),_=n("p"),te=a("There are two ways to get started with easy-rpc. The template is a little easier, but doesn\u2019t teach you a lot about the file structure, configuration and setup. The step by step guide to create the project manually takes slightly more time but explains what needs to be where and how easy-rpc can be configured. For first time users it is recommended to create the project manually."),et=y(),j=n("h2"),x=n("a"),ve=n("span"),jt=a("Template"),tt=y(),g=n("p"),xt=a("Clone it from "),L=n("a"),gt=a("here (https://github.com/m1212e/easy-rpc-project-template)"),Dt=a("."),st=y(),se=n("p"),St=a("The README.md files in the template explain the setup and what can be found where."),ot=y(),D=n("h2"),S=n("a"),me=n("span"),Ot=a("Creating the project manually"),at=y(),O=n("p"),Pt=a("First, choose a directory you want to create the project in. In this example we will create the directory "),we=n("code"),It=a("/webapp"),Nt=a("."),lt=y(),b=n("p"),Rt=a("Now think about which roles you need for this project. If you are not familiar with the concept of easy-rpc roles, you can read about them "),Be=n("strong"),oe=n("a"),Wt=a("here"),Ht=a(". The question you need to ask yourself is: what entities exist in this project and what is their purpose. Depending on your scenario you can choose multiple browser and http-server roles. In our case we want a simple webapp setup consisting of one kind of server and one kind of client. We\u2019ll call them \u201CBackend\u201D and \u201CFrontend\u201D. We create directories accordingly: "),_e=n("code"),qt=a("/webapp/frontend"),Gt=a(", "),be=n("code"),Jt=a("/webapp/backend"),Mt=a("."),nt=y(),P=n("p"),Ut=a("After creating directories for our roles, we need a directory to store our source files which contain the information about the actual endpoints which are offered by each role. Both, frontend and backend can access the sources and generate the code to call the endpoints accordingly. In this example we will use the "),Ee=n("code"),Vt=a("/webapp/sources"),Xt=a(" directory for that."),rt=y(),ae=n("p"),Zt=a("Our current structure looks like this:"),it=y(),ke=new Y(!1),$e=y(),I=n("h3"),N=n("a"),Ae=n("span"),zt=a("Sources"),ct=y(),C=n("p"),Kt=a("Adding the sources and configuring them is done quickly by creating two files: "),Fe=n("code"),Lt=a("/webapp/sources/api.erpc"),Qt=a(" and "),Ce=n("code"),Yt=a("/webapp/sources/roles.json"),pt=y(),E=n("p"),es=a("The "),Te=n("code"),ts=a("roles.json"),ss=a(" defines, which roles exist for this source directory. We tell easy-rpc that there are two roles and what type these roles have. See the "),je=n("strong"),le=n("a"),os=a("syntax section"),as=a(" for more information on what configuration options are possible and how the "),xe=n("code"),ls=a("roles.json"),ns=a(" should be structured."),dt=y(),pe(R.$$.fragment),ft=y(),T=n("p"),rs=a("The "),ge=n("code"),is=a("api.erpc"),cs=a(" file defines two endpoints, one on each role. If you are not familiar with easy-rpc syntax, see the "),De=n("strong"),ne=n("a"),ps=a("syntax section"),ut=y(),pe(W.$$.fragment),ht=y(),re=n("p"),ds=a("The sources directory is now set up. We configured two roles and gave them one endpoint each. The file structure now looks like this"),yt=y(),Se=new Y(!1),Oe=y(),H=n("h3"),q=n("a"),Pe=n("span"),fs=a("Backend"),vt=y(),G=n("p"),us=a("As configured in the sources directory, out backend will function as an http-server. To do this we need an npm package. Install it inside "),Ie=n("code"),hs=a("/webapp/backend"),ys=a(" with"),mt=y(),pe(J.$$.fragment),wt=y(),B=n("p"),vs=a("This should create a "),Ne=n("code"),ms=a("package.json"),ws=a(" and "),Re=n("code"),Bs=a("package-lock.json"),_s=a(" file where you can see the added dependency. Internally, the server code is written in Rust. The installed package is an adapter to make the Rust code useable from JavaScript. The used native "),We=n("code"),bs=a(".node"),Es=a(" file will be downloaded and stored into your "),He=n("code"),ks=a("node_modules"),$s=a(" directory. Some bundlers cannot handle these kind of packages by default, keep this in mind when you use a bundler tool."),Bt=y(),k=n("p"),As=a("To make use of the generated TypeScript code, we need a way to run TypeScript. "),qe=n("code"),Fs=a("ts-node"),Cs=a(" is a package which allows us to do this without much configuration. But you can use any other tool you want. The "),ie=n("a"),Ts=a("template"),js=a(" uses "),Ge=n("code"),xs=a("esbuild"),gs=a(" to process and run TypeScript."),_t=y(),M=n("p"),Ds=a("Install "),Je=n("code"),Ss=a("ts-node"),Os=a(" it with"),bt=y(),pe(U.$$.fragment),Et=y(),$=n("p"),Ps=a("For convenience you can add a script inside the "),Me=n("code"),Is=a("package.json"),Ns=a(" which will start a "),Ue=n("code"),Rs=a("main.ts"),Ws=a(" file which we still have to create. The whole "),Ve=n("code"),Hs=a("package.json"),qs=a(" now looks like this"),kt=y(),pe(V.$$.fragment),this.h()},l(e){c=r(e,"H1",{id:!0});var o=i(c);m=r(o,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Xe=i(m);f=r(Xe,"SPAN",{class:!0}),i(f).forEach(t),Xe.forEach(t),d=l(o,"Getting started with easy-rpc"),o.forEach(t),u=v(e),_=r(e,"P",{});var Ze=i(_);te=l(Ze,"There are two ways to get started with easy-rpc. The template is a little easier, but doesn\u2019t teach you a lot about the file structure, configuration and setup. The step by step guide to create the project manually takes slightly more time but explains what needs to be where and how easy-rpc can be configured. For first time users it is recommended to create the project manually."),Ze.forEach(t),et=v(e),j=r(e,"H2",{id:!0});var ce=i(j);x=r(ce,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ze=i(x);ve=r(ze,"SPAN",{class:!0}),i(ve).forEach(t),ze.forEach(t),jt=l(ce,"Template"),ce.forEach(t),tt=v(e),g=r(e,"P",{});var Q=i(g);xt=l(Q,"Clone it from "),L=r(Q,"A",{href:!0,rel:!0});var Vs=i(L);gt=l(Vs,"here (https://github.com/m1212e/easy-rpc-project-template)"),Vs.forEach(t),Dt=l(Q,"."),Q.forEach(t),st=v(e),se=r(e,"P",{});var Xs=i(se);St=l(Xs,"The README.md files in the template explain the setup and what can be found where."),Xs.forEach(t),ot=v(e),D=r(e,"H2",{id:!0});var Gs=i(D);S=r(Gs,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Zs=i(S);me=r(Zs,"SPAN",{class:!0}),i(me).forEach(t),Zs.forEach(t),Ot=l(Gs,"Creating the project manually"),Gs.forEach(t),at=v(e),O=r(e,"P",{});var At=i(O);Pt=l(At,"First, choose a directory you want to create the project in. In this example we will create the directory "),we=r(At,"CODE",{});var zs=i(we);It=l(zs,"/webapp"),zs.forEach(t),Nt=l(At,"."),At.forEach(t),lt=v(e),b=r(e,"P",{});var X=i(b);Rt=l(X,"Now think about which roles you need for this project. If you are not familiar with the concept of easy-rpc roles, you can read about them "),Be=r(X,"STRONG",{});var Ks=i(Be);oe=r(Ks,"A",{href:!0});var Ls=i(oe);Wt=l(Ls,"here"),Ls.forEach(t),Ks.forEach(t),Ht=l(X,". The question you need to ask yourself is: what entities exist in this project and what is their purpose. Depending on your scenario you can choose multiple browser and http-server roles. In our case we want a simple webapp setup consisting of one kind of server and one kind of client. We\u2019ll call them \u201CBackend\u201D and \u201CFrontend\u201D. We create directories accordingly: "),_e=r(X,"CODE",{});var Qs=i(_e);qt=l(Qs,"/webapp/frontend"),Qs.forEach(t),Gt=l(X,", "),be=r(X,"CODE",{});var Ys=i(be);Jt=l(Ys,"/webapp/backend"),Ys.forEach(t),Mt=l(X,"."),X.forEach(t),nt=v(e),P=r(e,"P",{});var Ft=i(P);Ut=l(Ft,"After creating directories for our roles, we need a directory to store our source files which contain the information about the actual endpoints which are offered by each role. Both, frontend and backend can access the sources and generate the code to call the endpoints accordingly. In this example we will use the "),Ee=r(Ft,"CODE",{});var eo=i(Ee);Vt=l(eo,"/webapp/sources"),eo.forEach(t),Xt=l(Ft," directory for that."),Ft.forEach(t),rt=v(e),ae=r(e,"P",{});var to=i(ae);Zt=l(to,"Our current structure looks like this:"),to.forEach(t),it=v(e),ke=ee(e,!1),$e=v(e),I=r(e,"H3",{id:!0});var Js=i(I);N=r(Js,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var so=i(N);Ae=r(so,"SPAN",{class:!0}),i(Ae).forEach(t),so.forEach(t),zt=l(Js,"Sources"),Js.forEach(t),ct=v(e),C=r(e,"P",{});var Ke=i(C);Kt=l(Ke,"Adding the sources and configuring them is done quickly by creating two files: "),Fe=r(Ke,"CODE",{});var oo=i(Fe);Lt=l(oo,"/webapp/sources/api.erpc"),oo.forEach(t),Qt=l(Ke," and "),Ce=r(Ke,"CODE",{});var ao=i(Ce);Yt=l(ao,"/webapp/sources/roles.json"),ao.forEach(t),Ke.forEach(t),pt=v(e),E=r(e,"P",{});var Z=i(E);es=l(Z,"The "),Te=r(Z,"CODE",{});var lo=i(Te);ts=l(lo,"roles.json"),lo.forEach(t),ss=l(Z," defines, which roles exist for this source directory. We tell easy-rpc that there are two roles and what type these roles have. See the "),je=r(Z,"STRONG",{});var no=i(je);le=r(no,"A",{href:!0});var ro=i(le);os=l(ro,"syntax section"),ro.forEach(t),no.forEach(t),as=l(Z," for more information on what configuration options are possible and how the "),xe=r(Z,"CODE",{});var io=i(xe);ls=l(io,"roles.json"),io.forEach(t),ns=l(Z," should be structured."),Z.forEach(t),dt=v(e),de(R.$$.fragment,e),ft=v(e),T=r(e,"P",{});var Le=i(T);rs=l(Le,"The "),ge=r(Le,"CODE",{});var co=i(ge);is=l(co,"api.erpc"),co.forEach(t),cs=l(Le," file defines two endpoints, one on each role. If you are not familiar with easy-rpc syntax, see the "),De=r(Le,"STRONG",{});var po=i(De);ne=r(po,"A",{href:!0});var fo=i(ne);ps=l(fo,"syntax section"),fo.forEach(t),po.forEach(t),Le.forEach(t),ut=v(e),de(W.$$.fragment,e),ht=v(e),re=r(e,"P",{});var uo=i(re);ds=l(uo,"The sources directory is now set up. We configured two roles and gave them one endpoint each. The file structure now looks like this"),uo.forEach(t),yt=v(e),Se=ee(e,!1),Oe=v(e),H=r(e,"H3",{id:!0});var Ms=i(H);q=r(Ms,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ho=i(q);Pe=r(ho,"SPAN",{class:!0}),i(Pe).forEach(t),ho.forEach(t),fs=l(Ms,"Backend"),Ms.forEach(t),vt=v(e),G=r(e,"P",{});var Ct=i(G);us=l(Ct,"As configured in the sources directory, out backend will function as an http-server. To do this we need an npm package. Install it inside "),Ie=r(Ct,"CODE",{});var yo=i(Ie);hs=l(yo,"/webapp/backend"),yo.forEach(t),ys=l(Ct," with"),Ct.forEach(t),mt=v(e),de(J.$$.fragment,e),wt=v(e),B=r(e,"P",{});var A=i(B);vs=l(A,"This should create a "),Ne=r(A,"CODE",{});var vo=i(Ne);ms=l(vo,"package.json"),vo.forEach(t),ws=l(A," and "),Re=r(A,"CODE",{});var mo=i(Re);Bs=l(mo,"package-lock.json"),mo.forEach(t),_s=l(A," file where you can see the added dependency. Internally, the server code is written in Rust. The installed package is an adapter to make the Rust code useable from JavaScript. The used native "),We=r(A,"CODE",{});var wo=i(We);bs=l(wo,".node"),wo.forEach(t),Es=l(A," file will be downloaded and stored into your "),He=r(A,"CODE",{});var Bo=i(He);ks=l(Bo,"node_modules"),Bo.forEach(t),$s=l(A," directory. Some bundlers cannot handle these kind of packages by default, keep this in mind when you use a bundler tool."),A.forEach(t),Bt=v(e),k=r(e,"P",{});var z=i(k);As=l(z,"To make use of the generated TypeScript code, we need a way to run TypeScript. "),qe=r(z,"CODE",{});var _o=i(qe);Fs=l(_o,"ts-node"),_o.forEach(t),Cs=l(z," is a package which allows us to do this without much configuration. But you can use any other tool you want. The "),ie=r(z,"A",{href:!0});var bo=i(ie);Ts=l(bo,"template"),bo.forEach(t),js=l(z," uses "),Ge=r(z,"CODE",{});var Eo=i(Ge);xs=l(Eo,"esbuild"),Eo.forEach(t),gs=l(z," to process and run TypeScript."),z.forEach(t),_t=v(e),M=r(e,"P",{});var Tt=i(M);Ds=l(Tt,"Install "),Je=r(Tt,"CODE",{});var ko=i(Je);Ss=l(ko,"ts-node"),ko.forEach(t),Os=l(Tt," it with"),Tt.forEach(t),bt=v(e),de(U.$$.fragment,e),Et=v(e),$=r(e,"P",{});var K=i($);Ps=l(K,"For convenience you can add a script inside the "),Me=r(K,"CODE",{});var $o=i(Me);Is=l($o,"package.json"),$o.forEach(t),Ns=l(K," which will start a "),Ue=r(K,"CODE",{});var Ao=i(Ue);Rs=l(Ao,"main.ts"),Ao.forEach(t),Ws=l(K," file which we still have to create. The whole "),Ve=r(K,"CODE",{});var Fo=i(Ve);Hs=l(Fo,"package.json"),Fo.forEach(t),qs=l(K," now looks like this"),K.forEach(t),kt=v(e),de(V.$$.fragment,e),this.h()},h(){h(f,"class","icon icon-link"),h(m,"aria-hidden","true"),h(m,"tabindex","-1"),h(m,"href","#getting-started-with-easy-rpc"),h(c,"id","getting-started-with-easy-rpc"),h(ve,"class","icon icon-link"),h(x,"aria-hidden","true"),h(x,"tabindex","-1"),h(x,"href","#template"),h(j,"id","template"),h(L,"href","https://github.com/m1212e/easy-rpc-project-template"),h(L,"rel","nofollow"),h(me,"class","icon icon-link"),h(S,"aria-hidden","true"),h(S,"tabindex","-1"),h(S,"href","#creating-the-project-manually"),h(D,"id","creating-the-project-manually"),h(oe,"href","/easy-rpc-docs/3%F0%9F%8E%AD%20Roles%20and%20Endpoints/"),ke.a=$e,h(Ae,"class","icon icon-link"),h(N,"aria-hidden","true"),h(N,"tabindex","-1"),h(N,"href","#sources"),h(I,"id","sources"),h(le,"href","/easy-rpc-docs/4%F0%9F%96%8B%EF%B8%8F%20Syntax/"),h(ne,"href","/easy-rpc-docs/4%F0%9F%96%8B%EF%B8%8F%20Syntax/"),Se.a=Oe,h(Pe,"class","icon icon-link"),h(q,"aria-hidden","true"),h(q,"tabindex","-1"),h(q,"href","#backend"),h(H,"id","backend"),h(ie,"href","#Template")},m(e,o){p(e,c,o),s(c,m),s(m,f),s(c,d),p(e,u,o),p(e,_,o),s(_,te),p(e,et,o),p(e,j,o),s(j,x),s(x,ve),s(j,jt),p(e,tt,o),p(e,g,o),s(g,xt),s(g,L),s(L,gt),s(g,Dt),p(e,st,o),p(e,se,o),s(se,St),p(e,ot,o),p(e,D,o),s(D,S),s(S,me),s(D,Ot),p(e,at,o),p(e,O,o),s(O,Pt),s(O,we),s(we,It),s(O,Nt),p(e,lt,o),p(e,b,o),s(b,Rt),s(b,Be),s(Be,oe),s(oe,Wt),s(b,Ht),s(b,_e),s(_e,qt),s(b,Gt),s(b,be),s(be,Jt),s(b,Mt),p(e,nt,o),p(e,P,o),s(P,Ut),s(P,Ee),s(Ee,Vt),s(P,Xt),p(e,rt,o),p(e,ae,o),s(ae,Zt),p(e,it,o),ke.m(To,e,o),p(e,$e,o),p(e,I,o),s(I,N),s(N,Ae),s(I,zt),p(e,ct,o),p(e,C,o),s(C,Kt),s(C,Fe),s(Fe,Lt),s(C,Qt),s(C,Ce),s(Ce,Yt),p(e,pt,o),p(e,E,o),s(E,es),s(E,Te),s(Te,ts),s(E,ss),s(E,je),s(je,le),s(le,os),s(E,as),s(E,xe),s(xe,ls),s(E,ns),p(e,dt,o),fe(R,e,o),p(e,ft,o),p(e,T,o),s(T,rs),s(T,ge),s(ge,is),s(T,cs),s(T,De),s(De,ne),s(ne,ps),p(e,ut,o),fe(W,e,o),p(e,ht,o),p(e,re,o),s(re,ds),p(e,yt,o),Se.m(jo,e,o),p(e,Oe,o),p(e,H,o),s(H,q),s(q,Pe),s(H,fs),p(e,vt,o),p(e,G,o),s(G,us),s(G,Ie),s(Ie,hs),s(G,ys),p(e,mt,o),fe(J,e,o),p(e,wt,o),p(e,B,o),s(B,vs),s(B,Ne),s(Ne,ms),s(B,ws),s(B,Re),s(Re,Bs),s(B,_s),s(B,We),s(We,bs),s(B,Es),s(B,He),s(He,ks),s(B,$s),p(e,Bt,o),p(e,k,o),s(k,As),s(k,qe),s(qe,Fs),s(k,Cs),s(k,ie),s(ie,Ts),s(k,js),s(k,Ge),s(Ge,xs),s(k,gs),p(e,_t,o),p(e,M,o),s(M,Ds),s(M,Je),s(Je,Ss),s(M,Os),p(e,bt,o),fe(U,e,o),p(e,Et,o),p(e,$,o),s($,Ps),s($,Me),s(Me,Is),s($,Ns),s($,Ue),s(Ue,Rs),s($,Ws),s($,Ve),s(Ve,Hs),s($,qs),p(e,kt,o),fe(V,e,o),$t=!0},p(e,o){const Xe={};o&2&&(Xe.$$scope={dirty:o,ctx:e}),R.$set(Xe);const Ze={};o&2&&(Ze.$$scope={dirty:o,ctx:e}),W.$set(Ze);const ce={};o&2&&(ce.$$scope={dirty:o,ctx:e}),J.$set(ce);const ze={};o&2&&(ze.$$scope={dirty:o,ctx:e}),U.$set(ze);const Q={};o&2&&(Q.$$scope={dirty:o,ctx:e}),V.$set(Q)},i(e){$t||(ue(R.$$.fragment,e),ue(W.$$.fragment,e),ue(J.$$.fragment,e),ue(U.$$.fragment,e),ue(V.$$.fragment,e),$t=!0)},o(e){he(R.$$.fragment,e),he(W.$$.fragment,e),he(J.$$.fragment,e),he(U.$$.fragment,e),he(V.$$.fragment,e),$t=!1},d(e){e&&t(c),e&&t(u),e&&t(_),e&&t(et),e&&t(j),e&&t(tt),e&&t(g),e&&t(st),e&&t(se),e&&t(ot),e&&t(D),e&&t(at),e&&t(O),e&&t(lt),e&&t(b),e&&t(nt),e&&t(P),e&&t(rt),e&&t(ae),e&&t(it),e&&ke.d(),e&&t($e),e&&t(I),e&&t(ct),e&&t(C),e&&t(pt),e&&t(E),e&&t(dt),ye(R,e),e&&t(ft),e&&t(T),e&&t(ut),ye(W,e),e&&t(ht),e&&t(re),e&&t(yt),e&&Se.d(),e&&t(Oe),e&&t(H),e&&t(vt),e&&t(G),e&&t(mt),ye(J,e),e&&t(wt),e&&t(B),e&&t(Bt),e&&t(k),e&&t(_t),e&&t(M),e&&t(bt),ye(U,e),e&&t(Et),e&&t($),e&&t(kt),ye(V,e)}}}function Go(w){let c,m;const f=[w[0]];let d={$$slots:{default:[qo]},$$scope:{ctx:w}};for(let u=0;u<f.length;u+=1)d=Us(d,f[u]);return c=new Po({props:d}),{c(){pe(c.$$.fragment)},l(u){de(c.$$.fragment,u)},m(u,_){fe(c,u,_),m=!0},p(u,[_]){const te=_&1?So(f,[Oo(u[0])]):{};_&2&&(te.$$scope={dirty:_,ctx:u}),c.$set(te)},i(u){m||(ue(c.$$.fragment,u),m=!0)},o(u){he(c.$$.fragment,u),m=!1},d(u){ye(c,u)}}}function Jo(w,c,m){return w.$$set=f=>{m(0,c=Us(Us({},c),Co(f)))},c=Co(c),[c]}class Xo extends xo{constructor(c){super(),go(this,c,Jo,Go,Do,{})}}export{Xo as default};
