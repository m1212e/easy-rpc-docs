import{S as xs,i as Is,s as Ns,U as _s,v as Y,w as ss,x as es,V as Ws,W as qs,f as ls,t as as,y as ns,X as Ps,k as d,q as u,a as m,l as y,m as f,h as l,r as v,c as A,n as E,b as c,D as p,Z as os,e as W,_ as ts,E as Es}from"../../../../chunks/index-7ac94c92.js";import{P as Hs}from"../../../../chunks/Page-c0f2c207.js";import{C as hs}from"../../../../chunks/Code-6d2e2b36.js";function Rs(F){let e,B=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">    This endpoint allows the user to log in with their credentials</span></div><div class='line'><span style="color: #7F848E">*/</span></div><div class='line'><span style="color: #E5C07B">Server</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">login</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"success"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"wrongPassword"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"emailNotConfirmed"</span></div></code></div></pre>`,o,t,a,r,$=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">/**</span></div><div class='line'><span style="color: #7F848E">    This endpoint allows the user to create a new account</span></div><div class='line'><span style="color: #7F848E">*/</span></div><div class='line'><span style="color: #E5C07B">Server</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">register</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"success"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"passwordTooShort"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"emailTaken"</span></div></code></div></pre>`,h;return{c(){e=new os(!1),o=m(),t=d("br"),a=m(),r=new os(!1),h=W(),this.h()},l(i){e=ts(i,!1),o=A(i),t=y(i,"BR",{}),a=A(i),r=ts(i,!1),h=W(),this.h()},h(){e.a=o,r.a=h},m(i,C){e.m(B,i,C),c(i,o,C),c(i,t,C),c(i,a,C),r.m($,i,C),c(i,h,C)},p:Es,d(i){i&&e.d(),i&&l(o),i&&l(t),i&&l(a),i&&l(h),i&&r.d()}}}function Gs(F){let e,B=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">server</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Server</span><span style="color: #ABB2BF">(</span><span style="color: #7F848E">/* here goes some config */</span><span style="color: #ABB2BF">);</span></div><div class='line'></div><div class='line'><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">result</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">await</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">server</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">auth</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">register</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">'my.email.address@example.com'</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">'MyVerySecurePassword'</span><span style="color: #ABB2BF">);</span></div><div class='line'><span style="color: #7F848E">/*</span></div><div class='line'><span style="color: #7F848E">    result is strongly typed as "success" | "passwordTooShort" | "emailTaken"</span></div><div class='line'><span style="color: #7F848E">*/</span></div><div class='line'><span style="color: #E5C07B">console</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">log</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">result</span><span style="color: #ABB2BF">);</span></div></code></div></pre>`,o;return{c(){e=new os(!1),o=W(),this.h()},l(t){e=ts(t,!1),o=W(),this.h()},h(){e.a=o},m(t,a){e.m(B,t,a),c(t,o,a)},p:Es,d(t){t&&l(o),t&&e.d()}}}function Os(F){let e,B=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">server</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Server</span><span style="color: #ABB2BF">(</span><span style="color: #7F848E">/* here goes some config */</span><span style="color: #ABB2BF">);</span></div><div class='line'></div><div class='line'><span style="color: #E5C07B">server</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">auth</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">register</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">async</span><span style="color: #ABB2BF"> (</span><span style="color: #E06C75">username</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">password</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">	</span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">length</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">6</span><span style="color: #ABB2BF">) {</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">'passwordTooShort'</span><span style="color: #ABB2BF">;</span></div><div class='line'><span style="color: #ABB2BF">	}</span></div><div class='line'></div><div class='line'><span style="color: #ABB2BF">	</span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #61AFEF">checkIfEmailIsAlreadyRegistered</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">username</span><span style="color: #ABB2BF">)) {</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">'emailTaken'</span><span style="color: #ABB2BF">;</span></div><div class='line'><span style="color: #ABB2BF">	}</span></div><div class='line'></div><div class='line'><span style="color: #ABB2BF">	</span><span style="color: #61AFEF">createUser</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">username</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">password</span><span style="color: #ABB2BF">);</span></div><div class='line'><span style="color: #ABB2BF">	</span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">'success'</span><span style="color: #ABB2BF">;</span></div><div class='line'><span style="color: #ABB2BF">};</span></div><div class='line'></div><div class='line'><span style="color: #E5C07B">server</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">start</span><span style="color: #ABB2BF">();</span></div></code></div></pre>`,o;return{c(){e=new os(!1),o=W(),this.h()},l(t){e=ts(t,!1),o=W(),this.h()},h(){e.a=o},m(t,a){e.m(B,t,a),c(t,o,a)},p:Es,d(t){t&&l(o),t&&e.d()}}}function Ms(F){let e,B,o,t,a,r,$,h,i,C,q,rs,ps,H,cs,is,U,g,w,R,Bs,V,S,ds,j,b,X,P,ys,Z,D,z,x,fs,J,k,K,I,us,L,T,vs,G,N,Fs,Q;return b=new hs({props:{filename:"auth.erpc",$$slots:{default:[Rs]},$$scope:{ctx:F}}}),D=new hs({props:{filename:"browser.main.ts",$$slots:{default:[Gs]},$$scope:{ctx:F}}}),k=new hs({props:{filename:"server.main.ts",$$slots:{default:[Os]},$$scope:{ctx:F}}}),{c(){e=d("h1"),B=d("a"),o=d("span"),t=u("What is easy-rpc?"),a=m(),r=d("p"),$=u("easy-rpc is a "),h=d("strong"),i=u("r"),C=u("emote "),q=d("strong"),rs=u("p"),ps=u("rocedure "),H=d("strong"),cs=u("c"),is=u("all framework which focuses on ease of use. It uses a custom declaration language which functions as a single source of truth and enables auto generated clients on both, server and client side. It was designed for usage in web contexts but is not limited to that. It uses HTTP to send and recieve calls."),U=m(),g=d("h1"),w=d("a"),R=d("span"),Bs=u("What does it look like?"),V=m(),S=d("p"),ds=u("A few easy-rpc endpoints might look like this:"),j=m(),Y(b.$$.fragment),X=m(),P=d("p"),ys=u("They can be called like this:"),Z=m(),Y(D.$$.fragment),z=m(),x=d("p"),fs=u("The function for handling incoming requestst on the server can be defined like this:"),J=m(),Y(k.$$.fragment),K=m(),I=d("p"),us=u("The request and response are strongly typed and intellisense is provided as you implement your calls. And because both client and server use the same .erpc source files they never get out of sync. Mismatching calls will be detected at build- and not runtime."),L=m(),T=d("p"),vs=u(`Want to dive right in?
See `),G=d("strong"),N=d("a"),Fs=u("getting started"),this.h()},l(s){e=y(s,"H1",{id:!0});var n=f(e);B=y(n,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var O=f(B);o=y(O,"SPAN",{class:!0}),f(o).forEach(l),O.forEach(l),t=v(n,"What is easy-rpc?"),n.forEach(l),a=A(s),r=y(s,"P",{});var _=f(r);$=v(_,"easy-rpc is a "),h=y(_,"STRONG",{});var M=f(h);i=v(M,"r"),M.forEach(l),C=v(_,"emote "),q=y(_,"STRONG",{});var Cs=f(q);rs=v(Cs,"p"),Cs.forEach(l),ps=v(_,"rocedure "),H=y(_,"STRONG",{});var $s=f(H);cs=v($s,"c"),$s.forEach(l),is=v(_,"all framework which focuses on ease of use. It uses a custom declaration language which functions as a single source of truth and enables auto generated clients on both, server and client side. It was designed for usage in web contexts but is not limited to that. It uses HTTP to send and recieve calls."),_.forEach(l),U=A(s),g=y(s,"H1",{id:!0});var ms=f(g);w=y(ms,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var gs=f(w);R=y(gs,"SPAN",{class:!0}),f(R).forEach(l),gs.forEach(l),Bs=v(ms,"What does it look like?"),ms.forEach(l),V=A(s),S=y(s,"P",{});var ws=f(S);ds=v(ws,"A few easy-rpc endpoints might look like this:"),ws.forEach(l),j=A(s),ss(b.$$.fragment,s),X=A(s),P=y(s,"P",{});var bs=f(P);ys=v(bs,"They can be called like this:"),bs.forEach(l),Z=A(s),ss(D.$$.fragment,s),z=A(s),x=y(s,"P",{});var Ds=f(x);fs=v(Ds,"The function for handling incoming requestst on the server can be defined like this:"),Ds.forEach(l),J=A(s),ss(k.$$.fragment,s),K=A(s),I=y(s,"P",{});var ks=f(I);us=v(ks,"The request and response are strongly typed and intellisense is provided as you implement your calls. And because both client and server use the same .erpc source files they never get out of sync. Mismatching calls will be detected at build- and not runtime."),ks.forEach(l),L=A(s),T=y(s,"P",{});var As=f(T);vs=v(As,`Want to dive right in?
See `),G=y(As,"STRONG",{});var Ts=f(G);N=y(Ts,"A",{href:!0});var Ss=f(N);Fs=v(Ss,"getting started"),Ss.forEach(l),Ts.forEach(l),As.forEach(l),this.h()},h(){E(o,"class","icon icon-link"),E(B,"aria-hidden","true"),E(B,"tabindex","-1"),E(B,"href","#what-is-easy-rpc"),E(e,"id","what-is-easy-rpc"),E(R,"class","icon icon-link"),E(w,"aria-hidden","true"),E(w,"tabindex","-1"),E(w,"href","#what-does-it-look-like"),E(g,"id","what-does-it-look-like"),E(N,"href","/easy-rpc-docs/2%F0%9F%9B%A0%EF%B8%8F%20Getting%20started/1Setup")},m(s,n){c(s,e,n),p(e,B),p(B,o),p(e,t),c(s,a,n),c(s,r,n),p(r,$),p(r,h),p(h,i),p(r,C),p(r,q),p(q,rs),p(r,ps),p(r,H),p(H,cs),p(r,is),c(s,U,n),c(s,g,n),p(g,w),p(w,R),p(g,Bs),c(s,V,n),c(s,S,n),p(S,ds),c(s,j,n),es(b,s,n),c(s,X,n),c(s,P,n),p(P,ys),c(s,Z,n),es(D,s,n),c(s,z,n),c(s,x,n),p(x,fs),c(s,J,n),es(k,s,n),c(s,K,n),c(s,I,n),p(I,us),c(s,L,n),c(s,T,n),p(T,vs),p(T,G),p(G,N),p(N,Fs),Q=!0},p(s,n){const O={};n&2&&(O.$$scope={dirty:n,ctx:s}),b.$set(O);const _={};n&2&&(_.$$scope={dirty:n,ctx:s}),D.$set(_);const M={};n&2&&(M.$$scope={dirty:n,ctx:s}),k.$set(M)},i(s){Q||(ls(b.$$.fragment,s),ls(D.$$.fragment,s),ls(k.$$.fragment,s),Q=!0)},o(s){as(b.$$.fragment,s),as(D.$$.fragment,s),as(k.$$.fragment,s),Q=!1},d(s){s&&l(e),s&&l(a),s&&l(r),s&&l(U),s&&l(g),s&&l(V),s&&l(S),s&&l(j),ns(b,s),s&&l(X),s&&l(P),s&&l(Z),ns(D,s),s&&l(z),s&&l(x),s&&l(J),ns(k,s),s&&l(K),s&&l(I),s&&l(L),s&&l(T)}}}function Us(F){let e,B;const o=[F[0]];let t={$$slots:{default:[Ms]},$$scope:{ctx:F}};for(let a=0;a<o.length;a+=1)t=_s(t,o[a]);return e=new Hs({props:t}),{c(){Y(e.$$.fragment)},l(a){ss(e.$$.fragment,a)},m(a,r){es(e,a,r),B=!0},p(a,[r]){const $=r&1?Ws(o,[qs(a[0])]):{};r&2&&($.$$scope={dirty:r,ctx:a}),e.$set($)},i(a){B||(ls(e.$$.fragment,a),B=!0)},o(a){as(e.$$.fragment,a),B=!1},d(a){ns(e,a)}}}function Vs(F,e,B){return F.$$set=o=>{B(0,e=_s(_s({},e),Ps(o)))},e=Ps(e),[e]}class zs extends xs{constructor(e){super(),Is(this,e,Vs,Us,Ns,{})}}export{zs as default};
