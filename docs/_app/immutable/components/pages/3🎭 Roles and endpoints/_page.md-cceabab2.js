import{S as he,i as Ae,s as Ee,U as Vs,v as _s,w as hs,x as As,V as Fe,W as $e,f as Es,t as Fs,y as $s,X as _e,k as c,q as f,a as u,l as i,m as B,h as e,r as d,c as v,n as g,b as t,D as l,Z as Xs,e as G,_ as Zs,E as zs}from"../../../chunks/index-7ac94c92.js";import{P as Ce}from"../../../chunks/Page-c0f2c207.js";import{C as Qs}from"../../../chunks/Code-6d2e2b36.js";function we(m){let o,y=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">[</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Client"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"browser"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"UserManagementServer"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"http-server"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"MessageServer"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"http-server"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	}</span></div><div class='line'><span style="color: #ABB2BF">]</span></div></code></div></pre>`,p;return{c(){o=new Xs(!1),p=G(),this.h()},l(n){o=Zs(n,!1),p=G(),this.h()},h(){o.a=p},m(n,r){o.m(y,n,r),t(n,p,r)},p:zs,d(n){n&&e(p),n&&o.d()}}}function ge(m){let o,y=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">UserManagementServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">login</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"Ok"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"WrongPassword"</span></div><div class='line'><span style="color: #E5C07B">UserManagementServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">register</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"Ok"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"UsernameAlreadyTaken"</span></div></code></div></pre>`,p;return{c(){o=new Xs(!1),p=G(),this.h()},l(n){o=Zs(n,!1),p=G(),this.h()},h(){o.a=p},m(n,r){o.m(y,n,r),t(n,p,r)},p:zs,d(n){n&&e(p),n&&o.d()}}}function be(m){let o,y=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">// can be called to send a new message to all other participants</span></div><div class='line'><span style="color: #E5C07B">MessageServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">sendMessage</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">timestamp</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int32</span><span style="color: #ABB2BF">)</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// can be called to send a message to a specific client</span></div><div class='line'><span style="color: #E5C07B">Client</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">showNewMessage</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">timestamp</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int32</span><span style="color: #ABB2BF">)</span></div></code></div></pre>`,p;return{c(){o=new Xs(!1),p=G(),this.h()},l(n){o=Zs(n,!1),p=G(),this.h()},h(){o.a=p},m(n,r){o.m(y,n,r),t(n,p,r)},p:zs,d(n){n&&e(p),n&&o.d()}}}function ke(m){let o,y,p,n,r,_,b,Y,k,q,Cs,ss,D,ws,es,P,W,gs,as,S,bs,os,O,H,ks,ls,x,Ds,ts,A,Ps,K,Ss,Os,ns,E,rs,j,xs,ps,M,h,js,L,I,Ms,Is,Q,Ts,Us,V,T,Ns,Rs,cs,F,Gs,X,qs,Ws,is,U,Hs,Bs,$,fs,N,Ks,ds,C,ys,R,Ls,us;return E=new Qs({props:{filename:"roles.json",$$slots:{default:[we]},$$scope:{ctx:m}}}),$=new Qs({props:{filename:"users.erpc",$$slots:{default:[ge]},$$scope:{ctx:m}}}),C=new Qs({props:{filename:"messages.erpc",$$slots:{default:[be]},$$scope:{ctx:m}}}),{c(){o=c("h1"),y=c("a"),p=c("span"),n=f("Roles and endpoints"),r=u(),_=c("p"),b=f("The concept of roles and their endpoints is what easy-rpc resolves around. It tries to look at all components of your app and interconnects them. Every entity of your project has a role. An example for this might be a small chat app. Imagine we need to following parts in our app:"),Y=u(),k=c("p"),q=c("strong"),Cs=f("User management server"),ss=u(),D=c("p"),ws=f("Manages accounts and auth, creates sessions"),es=u(),P=c("p"),W=c("strong"),gs=f("Message server"),as=u(),S=c("p"),bs=f("Allows users to send and recieve messages"),os=u(),O=c("p"),H=c("strong"),ks=f("Client"),ls=u(),x=c("p"),Ds=f("Uses the app to chat, needs to be notified of new messages"),ts=u(),A=c("p"),Ps=f("In an easy-rpc setup, each of these entities would have its own role. A "),K=c("code"),Ss=f("roles.json"),Os=f(" for this setup could look like this:"),ns=u(),_s(E.$$.fragment),rs=u(),j=c("p"),xs=f("On these three roles we can now declare some endpoints. Endpoints always belong to a role and can be called by other roles."),ps=u(),M=c("blockquote"),h=c("p"),js=f("If you are unsure about where to put the files easy-rpc uses, take a look at the "),L=c("strong"),I=c("a"),Ms=f("setup guide in the getting started section"),Is=f(". If you need more info about the available configuration options for the "),Q=c("code"),Ts=f("roles.json"),Us=f(", see "),V=c("strong"),T=c("a"),Ns=f("syntax section"),Rs=f("."),cs=u(),F=c("p"),Gs=f("We create two "),X=c("code"),qs=f(".erpc"),Ws=f(" files to split up the endpoints by their category."),is=u(),U=c("p"),Hs=f("First, the user management:"),Bs=u(),_s($.$$.fragment),fs=u(),N=c("p"),Ks=f("Second, the messages:"),ds=u(),_s(C.$$.fragment),ys=u(),R=c("p"),Ls=f("And thats it. easy-rpc will generate the clients according to your source files and allow the roles in your project to connect to each other via the endpoints you declared."),this.h()},l(s){o=i(s,"H1",{id:!0});var a=B(o);y=i(a,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Z=B(y);p=i(Z,"SPAN",{class:!0}),B(p).forEach(e),Z.forEach(e),n=d(a,"Roles and endpoints"),a.forEach(e),r=v(s),_=i(s,"P",{});var z=B(_);b=d(z,"The concept of roles and their endpoints is what easy-rpc resolves around. It tries to look at all components of your app and interconnects them. Every entity of your project has a role. An example for this might be a small chat app. Imagine we need to following parts in our app:"),z.forEach(e),Y=v(s),k=i(s,"P",{});var J=B(k);q=i(J,"STRONG",{});var Js=B(q);Cs=d(Js,"User management server"),Js.forEach(e),J.forEach(e),ss=v(s),D=i(s,"P",{});var Ys=B(D);ws=d(Ys,"Manages accounts and auth, creates sessions"),Ys.forEach(e),es=v(s),P=i(s,"P",{});var se=B(P);W=i(se,"STRONG",{});var ee=B(W);gs=d(ee,"Message server"),ee.forEach(e),se.forEach(e),as=v(s),S=i(s,"P",{});var ae=B(S);bs=d(ae,"Allows users to send and recieve messages"),ae.forEach(e),os=v(s),O=i(s,"P",{});var oe=B(O);H=i(oe,"STRONG",{});var le=B(H);ks=d(le,"Client"),le.forEach(e),oe.forEach(e),ls=v(s),x=i(s,"P",{});var te=B(x);Ds=d(te,"Uses the app to chat, needs to be notified of new messages"),te.forEach(e),ts=v(s),A=i(s,"P",{});var vs=B(A);Ps=d(vs,"In an easy-rpc setup, each of these entities would have its own role. A "),K=i(vs,"CODE",{});var ne=B(K);Ss=d(ne,"roles.json"),ne.forEach(e),Os=d(vs," for this setup could look like this:"),vs.forEach(e),ns=v(s),hs(E.$$.fragment,s),rs=v(s),j=i(s,"P",{});var re=B(j);xs=d(re,"On these three roles we can now declare some endpoints. Endpoints always belong to a role and can be called by other roles."),re.forEach(e),ps=v(s),M=i(s,"BLOCKQUOTE",{});var pe=B(M);h=i(pe,"P",{});var w=B(h);js=d(w,"If you are unsure about where to put the files easy-rpc uses, take a look at the "),L=i(w,"STRONG",{});var ce=B(L);I=i(ce,"A",{href:!0});var ie=B(I);Ms=d(ie,"setup guide in the getting started section"),ie.forEach(e),ce.forEach(e),Is=d(w,". If you need more info about the available configuration options for the "),Q=i(w,"CODE",{});var Be=B(Q);Ts=d(Be,"roles.json"),Be.forEach(e),Us=d(w,", see "),V=i(w,"STRONG",{});var fe=B(V);T=i(fe,"A",{href:!0});var de=B(T);Ns=d(de,"syntax section"),de.forEach(e),fe.forEach(e),Rs=d(w,"."),w.forEach(e),pe.forEach(e),cs=v(s),F=i(s,"P",{});var ms=B(F);Gs=d(ms,"We create two "),X=i(ms,"CODE",{});var ye=B(X);qs=d(ye,".erpc"),ye.forEach(e),Ws=d(ms," files to split up the endpoints by their category."),ms.forEach(e),is=v(s),U=i(s,"P",{});var ue=B(U);Hs=d(ue,"First, the user management:"),ue.forEach(e),Bs=v(s),hs($.$$.fragment,s),fs=v(s),N=i(s,"P",{});var ve=B(N);Ks=d(ve,"Second, the messages:"),ve.forEach(e),ds=v(s),hs(C.$$.fragment,s),ys=v(s),R=i(s,"P",{});var me=B(R);Ls=d(me,"And thats it. easy-rpc will generate the clients according to your source files and allow the roles in your project to connect to each other via the endpoints you declared."),me.forEach(e),this.h()},h(){g(p,"class","icon icon-link"),g(y,"aria-hidden","true"),g(y,"tabindex","-1"),g(y,"href","#roles-and-endpoints"),g(o,"id","roles-and-endpoints"),g(I,"href","/easy-rpc-docs/2%F0%9F%9B%A0%EF%B8%8F%20Getting%20started/1Setup"),g(T,"href","/easy-rpc-docs/5%E2%9A%99%EF%B8%8F%20Configuration/#rolesjson")},m(s,a){t(s,o,a),l(o,y),l(y,p),l(o,n),t(s,r,a),t(s,_,a),l(_,b),t(s,Y,a),t(s,k,a),l(k,q),l(q,Cs),t(s,ss,a),t(s,D,a),l(D,ws),t(s,es,a),t(s,P,a),l(P,W),l(W,gs),t(s,as,a),t(s,S,a),l(S,bs),t(s,os,a),t(s,O,a),l(O,H),l(H,ks),t(s,ls,a),t(s,x,a),l(x,Ds),t(s,ts,a),t(s,A,a),l(A,Ps),l(A,K),l(K,Ss),l(A,Os),t(s,ns,a),As(E,s,a),t(s,rs,a),t(s,j,a),l(j,xs),t(s,ps,a),t(s,M,a),l(M,h),l(h,js),l(h,L),l(L,I),l(I,Ms),l(h,Is),l(h,Q),l(Q,Ts),l(h,Us),l(h,V),l(V,T),l(T,Ns),l(h,Rs),t(s,cs,a),t(s,F,a),l(F,Gs),l(F,X),l(X,qs),l(F,Ws),t(s,is,a),t(s,U,a),l(U,Hs),t(s,Bs,a),As($,s,a),t(s,fs,a),t(s,N,a),l(N,Ks),t(s,ds,a),As(C,s,a),t(s,ys,a),t(s,R,a),l(R,Ls),us=!0},p(s,a){const Z={};a&2&&(Z.$$scope={dirty:a,ctx:s}),E.$set(Z);const z={};a&2&&(z.$$scope={dirty:a,ctx:s}),$.$set(z);const J={};a&2&&(J.$$scope={dirty:a,ctx:s}),C.$set(J)},i(s){us||(Es(E.$$.fragment,s),Es($.$$.fragment,s),Es(C.$$.fragment,s),us=!0)},o(s){Fs(E.$$.fragment,s),Fs($.$$.fragment,s),Fs(C.$$.fragment,s),us=!1},d(s){s&&e(o),s&&e(r),s&&e(_),s&&e(Y),s&&e(k),s&&e(ss),s&&e(D),s&&e(es),s&&e(P),s&&e(as),s&&e(S),s&&e(os),s&&e(O),s&&e(ls),s&&e(x),s&&e(ts),s&&e(A),s&&e(ns),$s(E,s),s&&e(rs),s&&e(j),s&&e(ps),s&&e(M),s&&e(cs),s&&e(F),s&&e(is),s&&e(U),s&&e(Bs),$s($,s),s&&e(fs),s&&e(N),s&&e(ds),$s(C,s),s&&e(ys),s&&e(R)}}}function De(m){let o,y;const p=[m[0]];let n={$$slots:{default:[ke]},$$scope:{ctx:m}};for(let r=0;r<p.length;r+=1)n=Vs(n,p[r]);return o=new Ce({props:n}),{c(){_s(o.$$.fragment)},l(r){hs(o.$$.fragment,r)},m(r,_){As(o,r,_),y=!0},p(r,[_]){const b=_&1?Fe(p,[$e(r[0])]):{};_&2&&(b.$$scope={dirty:_,ctx:r}),o.$set(b)},i(r){y||(Es(o.$$.fragment,r),y=!0)},o(r){Fs(o.$$.fragment,r),y=!1},d(r){$s(o,r)}}}function Pe(m,o,y){return m.$$set=p=>{y(0,o=Vs(Vs({},o),_e(p)))},o=_e(o),[o]}class je extends he{constructor(o){super(),Ae(this,o,Pe,De,Ee,{})}}export{je as default};
