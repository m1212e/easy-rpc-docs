import{S as hs,i as As,s as Es,U as Ve,v as _e,w as he,x as Ae,V as Fs,W as $s,f as Ee,t as Fe,y as $e,X as _s,k as c,q as B,a as u,l as i,m as f,h as s,r as d,c as v,n as g,b as l,D as o,Z as Xe,e as G,_ as Ze,E as ze}from"../../../chunks/index-7ac94c92.js";import{P as Cs}from"../../../chunks/Page-c0f2c207.js";import{C as Qe}from"../../../chunks/Code-6d2e2b36.js";function ws(m){let t,y=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">[</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Client"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"type"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"browser"</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"UserManagementServer"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"type"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"http-server"</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"MessageServer"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"type"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"http-server"</span></div><div class='line'><span style="color: #ABB2BF">	}</span></div><div class='line'><span style="color: #ABB2BF">]</span></div></code></div></pre>`,p;return{c(){t=new Xe(!1),p=G(),this.h()},l(n){t=Ze(n,!1),p=G(),this.h()},h(){t.a=p},m(n,r){t.m(y,n,r),l(n,p,r)},p:ze,d(n){n&&s(p),n&&t.d()}}}function gs(m){let t,y=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">UserManagementServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">login</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"Ok"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"WrongPassword"</span></div><div class='line'><span style="color: #E5C07B">UserManagementServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">register</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"Ok"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"UsernameAlreadyTaken"</span></div></code></div></pre>`,p;return{c(){t=new Xe(!1),p=G(),this.h()},l(n){t=Ze(n,!1),p=G(),this.h()},h(){t.a=p},m(n,r){t.m(y,n,r),l(n,p,r)},p:ze,d(n){n&&s(p),n&&t.d()}}}function bs(m){let t,y=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">// can be called to send a new message to all other participants</span></div><div class='line'><span style="color: #E5C07B">MessageServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">sendMessage</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">timestamp</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int32</span><span style="color: #ABB2BF">)</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// can be called to send a message to a specific client</span></div><div class='line'><span style="color: #E5C07B">Client</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">showNewMessage</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">timestamp</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int32</span><span style="color: #ABB2BF">)</span></div></code></div></pre>`,p;return{c(){t=new Xe(!1),p=G(),this.h()},l(n){t=Ze(n,!1),p=G(),this.h()},h(){t.a=p},m(n,r){t.m(y,n,r),l(n,p,r)},p:ze,d(n){n&&s(p),n&&t.d()}}}function ks(m){let t,y,p,n,r,_,b,Y,k,q,Ce,ee,D,we,se,P,W,ge,ae,S,be,te,O,H,ke,oe,x,De,le,A,Pe,K,Se,Oe,ne,E,re,j,xe,pe,M,h,je,L,I,Me,Ie,Q,Te,Ue,V,T,Ne,Re,ce,F,Ge,X,qe,We,ie,U,He,fe,$,Be,N,Ke,de,C,ye,R,Le,ue;return E=new Qe({props:{filename:"roles.json",$$slots:{default:[ws]},$$scope:{ctx:m}}}),$=new Qe({props:{filename:"users.erpc",$$slots:{default:[gs]},$$scope:{ctx:m}}}),C=new Qe({props:{filename:"messages.erpc",$$slots:{default:[bs]},$$scope:{ctx:m}}}),{c(){t=c("h1"),y=c("a"),p=c("span"),n=B("Roles and endpoints"),r=u(),_=c("p"),b=B("The concept of roles and their endpoints is what easy-rpc resolves around. It tries to look at all components of your app and interconnects them. Every entity of your project has a role. An example for this might be a small chat app. Imagine we need to following parts in our app:"),Y=u(),k=c("p"),q=c("strong"),Ce=B("User management server"),ee=u(),D=c("p"),we=B("Manages accounts and auth, creates sessions"),se=u(),P=c("p"),W=c("strong"),ge=B("Message server"),ae=u(),S=c("p"),be=B("Allows users to send and recieve messages"),te=u(),O=c("p"),H=c("strong"),ke=B("Client"),oe=u(),x=c("p"),De=B("Uses the app to chat, needs to be notified of new messages"),le=u(),A=c("p"),Pe=B("In an easy-rpc setup, each of these entities would have its own role. A "),K=c("code"),Se=B("roles.json"),Oe=B(" for this setup could look like this:"),ne=u(),_e(E.$$.fragment),re=u(),j=c("p"),xe=B("On these three roles we can now declare some endpoints. Endpoints always belong to a role and can be called by other roles."),pe=u(),M=c("blockquote"),h=c("p"),je=B("If you are unsure about where to put the files easy-rpc uses, take a look at the "),L=c("strong"),I=c("a"),Me=B("setup guide in the getting started section"),Ie=B(". If you need more info about the available configuration options for the "),Q=c("code"),Te=B("roles.json"),Ue=B(", see "),V=c("strong"),T=c("a"),Ne=B("syntax section"),Re=B("."),ce=u(),F=c("p"),Ge=B("We create two "),X=c("code"),qe=B(".erpc"),We=B(" files to split up the endpoints by their category."),ie=u(),U=c("p"),He=B("First, the user management:"),fe=u(),_e($.$$.fragment),Be=u(),N=c("p"),Ke=B("Second, the messages:"),de=u(),_e(C.$$.fragment),ye=u(),R=c("p"),Le=B("And thats it. easy-rpc will generate the clients according to your source files and allow the roles in your project to connect to each other via the endpoints you declared."),this.h()},l(e){t=i(e,"H1",{id:!0});var a=f(t);y=i(a,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Z=f(y);p=i(Z,"SPAN",{class:!0}),f(p).forEach(s),Z.forEach(s),n=d(a,"Roles and endpoints"),a.forEach(s),r=v(e),_=i(e,"P",{});var z=f(_);b=d(z,"The concept of roles and their endpoints is what easy-rpc resolves around. It tries to look at all components of your app and interconnects them. Every entity of your project has a role. An example for this might be a small chat app. Imagine we need to following parts in our app:"),z.forEach(s),Y=v(e),k=i(e,"P",{});var J=f(k);q=i(J,"STRONG",{});var Je=f(q);Ce=d(Je,"User management server"),Je.forEach(s),J.forEach(s),ee=v(e),D=i(e,"P",{});var Ye=f(D);we=d(Ye,"Manages accounts and auth, creates sessions"),Ye.forEach(s),se=v(e),P=i(e,"P",{});var es=f(P);W=i(es,"STRONG",{});var ss=f(W);ge=d(ss,"Message server"),ss.forEach(s),es.forEach(s),ae=v(e),S=i(e,"P",{});var as=f(S);be=d(as,"Allows users to send and recieve messages"),as.forEach(s),te=v(e),O=i(e,"P",{});var ts=f(O);H=i(ts,"STRONG",{});var os=f(H);ke=d(os,"Client"),os.forEach(s),ts.forEach(s),oe=v(e),x=i(e,"P",{});var ls=f(x);De=d(ls,"Uses the app to chat, needs to be notified of new messages"),ls.forEach(s),le=v(e),A=i(e,"P",{});var ve=f(A);Pe=d(ve,"In an easy-rpc setup, each of these entities would have its own role. A "),K=i(ve,"CODE",{});var ns=f(K);Se=d(ns,"roles.json"),ns.forEach(s),Oe=d(ve," for this setup could look like this:"),ve.forEach(s),ne=v(e),he(E.$$.fragment,e),re=v(e),j=i(e,"P",{});var rs=f(j);xe=d(rs,"On these three roles we can now declare some endpoints. Endpoints always belong to a role and can be called by other roles."),rs.forEach(s),pe=v(e),M=i(e,"BLOCKQUOTE",{});var ps=f(M);h=i(ps,"P",{});var w=f(h);je=d(w,"If you are unsure about where to put the files easy-rpc uses, take a look at the "),L=i(w,"STRONG",{});var cs=f(L);I=i(cs,"A",{href:!0});var is=f(I);Me=d(is,"setup guide in the getting started section"),is.forEach(s),cs.forEach(s),Ie=d(w,". If you need more info about the available configuration options for the "),Q=i(w,"CODE",{});var fs=f(Q);Te=d(fs,"roles.json"),fs.forEach(s),Ue=d(w,", see "),V=i(w,"STRONG",{});var Bs=f(V);T=i(Bs,"A",{href:!0});var ds=f(T);Ne=d(ds,"syntax section"),ds.forEach(s),Bs.forEach(s),Re=d(w,"."),w.forEach(s),ps.forEach(s),ce=v(e),F=i(e,"P",{});var me=f(F);Ge=d(me,"We create two "),X=i(me,"CODE",{});var ys=f(X);qe=d(ys,".erpc"),ys.forEach(s),We=d(me," files to split up the endpoints by their category."),me.forEach(s),ie=v(e),U=i(e,"P",{});var us=f(U);He=d(us,"First, the user management:"),us.forEach(s),fe=v(e),he($.$$.fragment,e),Be=v(e),N=i(e,"P",{});var vs=f(N);Ke=d(vs,"Second, the messages:"),vs.forEach(s),de=v(e),he(C.$$.fragment,e),ye=v(e),R=i(e,"P",{});var ms=f(R);Le=d(ms,"And thats it. easy-rpc will generate the clients according to your source files and allow the roles in your project to connect to each other via the endpoints you declared."),ms.forEach(s),this.h()},h(){g(p,"class","icon icon-link"),g(y,"aria-hidden","true"),g(y,"tabindex","-1"),g(y,"href","#roles-and-endpoints"),g(t,"id","roles-and-endpoints"),g(I,"href","/easy-rpc-docs/2%F0%9F%9B%A0%EF%B8%8F%20Getting%20started/1Setup"),g(T,"href","/easy-rpc-docs/5%E2%9A%99%EF%B8%8F%20Configuration/#rolesjson")},m(e,a){l(e,t,a),o(t,y),o(y,p),o(t,n),l(e,r,a),l(e,_,a),o(_,b),l(e,Y,a),l(e,k,a),o(k,q),o(q,Ce),l(e,ee,a),l(e,D,a),o(D,we),l(e,se,a),l(e,P,a),o(P,W),o(W,ge),l(e,ae,a),l(e,S,a),o(S,be),l(e,te,a),l(e,O,a),o(O,H),o(H,ke),l(e,oe,a),l(e,x,a),o(x,De),l(e,le,a),l(e,A,a),o(A,Pe),o(A,K),o(K,Se),o(A,Oe),l(e,ne,a),Ae(E,e,a),l(e,re,a),l(e,j,a),o(j,xe),l(e,pe,a),l(e,M,a),o(M,h),o(h,je),o(h,L),o(L,I),o(I,Me),o(h,Ie),o(h,Q),o(Q,Te),o(h,Ue),o(h,V),o(V,T),o(T,Ne),o(h,Re),l(e,ce,a),l(e,F,a),o(F,Ge),o(F,X),o(X,qe),o(F,We),l(e,ie,a),l(e,U,a),o(U,He),l(e,fe,a),Ae($,e,a),l(e,Be,a),l(e,N,a),o(N,Ke),l(e,de,a),Ae(C,e,a),l(e,ye,a),l(e,R,a),o(R,Le),ue=!0},p(e,a){const Z={};a&2&&(Z.$$scope={dirty:a,ctx:e}),E.$set(Z);const z={};a&2&&(z.$$scope={dirty:a,ctx:e}),$.$set(z);const J={};a&2&&(J.$$scope={dirty:a,ctx:e}),C.$set(J)},i(e){ue||(Ee(E.$$.fragment,e),Ee($.$$.fragment,e),Ee(C.$$.fragment,e),ue=!0)},o(e){Fe(E.$$.fragment,e),Fe($.$$.fragment,e),Fe(C.$$.fragment,e),ue=!1},d(e){e&&s(t),e&&s(r),e&&s(_),e&&s(Y),e&&s(k),e&&s(ee),e&&s(D),e&&s(se),e&&s(P),e&&s(ae),e&&s(S),e&&s(te),e&&s(O),e&&s(oe),e&&s(x),e&&s(le),e&&s(A),e&&s(ne),$e(E,e),e&&s(re),e&&s(j),e&&s(pe),e&&s(M),e&&s(ce),e&&s(F),e&&s(ie),e&&s(U),e&&s(fe),$e($,e),e&&s(Be),e&&s(N),e&&s(de),$e(C,e),e&&s(ye),e&&s(R)}}}function Ds(m){let t,y;const p=[m[0]];let n={$$slots:{default:[ks]},$$scope:{ctx:m}};for(let r=0;r<p.length;r+=1)n=Ve(n,p[r]);return t=new Cs({props:n}),{c(){_e(t.$$.fragment)},l(r){he(t.$$.fragment,r)},m(r,_){Ae(t,r,_),y=!0},p(r,[_]){const b=_&1?Fs(p,[$s(r[0])]):{};_&2&&(b.$$scope={dirty:_,ctx:r}),t.$set(b)},i(r){y||(Ee(t.$$.fragment,r),y=!0)},o(r){Fe(t.$$.fragment,r),y=!1},d(r){$e(t,r)}}}function Ps(m,t,y){return m.$$set=p=>{y(0,t=Ve(Ve({},t),_s(p)))},t=_s(t),[t]}class js extends hs{constructor(t){super(),As(this,t,Ps,Ds,Es,{})}}export{js as default};
