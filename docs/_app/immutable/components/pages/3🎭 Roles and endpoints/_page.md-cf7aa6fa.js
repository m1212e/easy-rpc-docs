import{S as hs,i as _s,s as As,U as Ze,v as Ae,w as Ee,x as Fe,V as Es,W as Fs,f as $e,t as Ce,y as we,X as vs,k as p,q as d,a as m,l as i,m as c,h as s,r as f,c as v,n as y,b as o,D as l,Z as ze,e as K,_ as Je,E as Ye}from"../../../chunks/index-7ac94c92.js";import{P as $s}from"../../../chunks/Page-c0f2c207.js";import{C as Xe}from"../../../chunks/Code-6d2e2b36.js";function Cs(h){let t,u=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">[</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"Client"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"browser"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"UserManagementServer"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"http-server"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	},</span></div><div class='line'><span style="color: #ABB2BF">	{</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"name"</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">"MessageServer"</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">		</span><span style="color: #E06C75">"types"</span><span style="color: #ABB2BF">: [</span><span style="color: #98C379">"http-server"</span><span style="color: #ABB2BF">]</span></div><div class='line'><span style="color: #ABB2BF">	}</span></div><div class='line'><span style="color: #ABB2BF">]</span></div></code></div></pre>`,B;return{c(){t=new ze(!1),B=K(),this.h()},l(n){t=Je(n,!1),B=K(),this.h()},h(){t.a=B},m(n,r){t.m(u,n,r),o(n,B,r)},p:Ye,d(n){n&&s(B),n&&t.d()}}}function ws(h){let t,u=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #E5C07B">UserManagementServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">login</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"Ok"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"WrongPassword"</span></div><div class='line'><span style="color: #E5C07B">UserManagementServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">register</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">username</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">password</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">) </span><span style="color: #98C379">"Ok"</span><span style="color: #ABB2BF"> | </span><span style="color: #98C379">"UsernameAlreadyTaken"</span></div></code></div></pre>`,B;return{c(){t=new ze(!1),B=K(),this.h()},l(n){t=Je(n,!1),B=K(),this.h()},h(){t.a=B},m(n,r){t.m(u,n,r),o(n,B,r)},p:Ye,d(n){n&&s(B),n&&t.d()}}}function bs(h){let t,u=`<pre class="shiki" style="background-color: #282c34; color: #abb2bf"><div class="language-id">erpc</div><div class='code-container'><code><div class='line'><span style="color: #7F848E">// can be called to send a new message to all other participants</span></div><div class='line'><span style="color: #E5C07B">MessageServer</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">sendMessage</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">timestamp</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int32</span><span style="color: #ABB2BF">)</span></div><div class='line'></div><div class='line'><span style="color: #7F848E">// can be called to send a message to a specific client</span></div><div class='line'><span style="color: #E5C07B">Client</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">showNewMessage</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">message</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">timestamp</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">int32</span><span style="color: #ABB2BF">)</span></div></code></div></pre>`,B;return{c(){t=new ze(!1),B=K(),this.h()},l(n){t=Je(n,!1),B=K(),this.h()},h(){t.a=B},m(n,r){t.m(u,n,r),o(n,B,r)},p:Ye,d(n){n&&s(B),n&&t.d()}}}function gs(h){let t,u,B,n,r,_,S,se,E,F,L,be,ae,M,ge,te,$,C,Q,ke,le,I,xe,oe,w,b,V,De,ne,O,Pe,re,g,Se,X,Me,Ie,pe,k,ie,U,Oe,ce,j,A,Ue,Z,N,je,Ne,z,T,Te,He,Be,x,qe,J,Re,We,de,H,Ge,fe,D,ye,q,Ke,ue,P,me,R,Le,ve;return k=new Xe({props:{filename:"roles.json",$$slots:{default:[Cs]},$$scope:{ctx:h}}}),D=new Xe({props:{filename:"users.erpc",$$slots:{default:[ws]},$$scope:{ctx:h}}}),P=new Xe({props:{filename:"messages.erpc",$$slots:{default:[bs]},$$scope:{ctx:h}}}),{c(){t=p("h1"),u=p("a"),B=p("span"),n=d("Roles and endpoints"),r=m(),_=p("p"),S=d("The concept of roles and their endpoints is what easy-rpc resolves around. It tries to look at all components of your app and interconnects them. Every entity of your project has a role. An example for this might be a small chat app. Imagine we need to following parts in out app:"),se=m(),E=p("h4"),F=p("a"),L=p("span"),be=d("User management server"),ae=m(),M=p("p"),ge=d("Manages accounts and auth, creates sessions"),te=m(),$=p("h4"),C=p("a"),Q=p("span"),ke=d("Message server"),le=m(),I=p("p"),xe=d("Allows users to send and recieve messages"),oe=m(),w=p("h4"),b=p("a"),V=p("span"),De=d("Client"),ne=m(),O=p("p"),Pe=d("Uses the app to chat, needs to be notified of new messages"),re=m(),g=p("p"),Se=d("In an easy-rpc setup, each of these entities would have its own role. A "),X=p("code"),Me=d("roles.json"),Ie=d(" for this setup could look like this:"),pe=m(),Ae(k.$$.fragment),ie=m(),U=p("p"),Oe=d("On these three roles we can now declare some endpoints. Endpoints always belong to a role and can be called by other roles."),ce=m(),j=p("blockquote"),A=p("p"),Ue=d("If you are unsure about where to put the files easy-rpc uses, take a look at the "),Z=p("strong"),N=p("a"),je=d("setup guide in the getting started section"),Ne=d(". If you need more info on the syntax, see the "),z=p("strong"),T=p("a"),Te=d("syntax section"),He=d("."),Be=m(),x=p("p"),qe=d("We create two "),J=p("code"),Re=d(".erpc"),We=d(" files to split up the endpoints by their category."),de=m(),H=p("p"),Ge=d("First, the user management:"),fe=m(),Ae(D.$$.fragment),ye=m(),q=p("p"),Ke=d("Second, the messages:"),ue=m(),Ae(P.$$.fragment),me=m(),R=p("p"),Le=d("And thats it. easy-rpc will generate the clients according to your source files and allow the roles in your project to connect to each other via the endpoints you declared."),this.h()},l(e){t=i(e,"H1",{id:!0});var a=c(t);u=i(a,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Y=c(u);B=i(Y,"SPAN",{class:!0}),c(B).forEach(s),Y.forEach(s),n=f(a,"Roles and endpoints"),a.forEach(s),r=v(e),_=i(e,"P",{});var ee=c(_);S=f(ee,"The concept of roles and their endpoints is what easy-rpc resolves around. It tries to look at all components of your app and interconnects them. Every entity of your project has a role. An example for this might be a small chat app. Imagine we need to following parts in out app:"),ee.forEach(s),se=v(e),E=i(e,"H4",{id:!0});var W=c(E);F=i(W,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var es=c(F);L=i(es,"SPAN",{class:!0}),c(L).forEach(s),es.forEach(s),be=f(W,"User management server"),W.forEach(s),ae=v(e),M=i(e,"P",{});var ss=c(M);ge=f(ss,"Manages accounts and auth, creates sessions"),ss.forEach(s),te=v(e),$=i(e,"H4",{id:!0});var Qe=c($);C=i(Qe,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var as=c(C);Q=i(as,"SPAN",{class:!0}),c(Q).forEach(s),as.forEach(s),ke=f(Qe,"Message server"),Qe.forEach(s),le=v(e),I=i(e,"P",{});var ts=c(I);xe=f(ts,"Allows users to send and recieve messages"),ts.forEach(s),oe=v(e),w=i(e,"H4",{id:!0});var Ve=c(w);b=i(Ve,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ls=c(b);V=i(ls,"SPAN",{class:!0}),c(V).forEach(s),ls.forEach(s),De=f(Ve,"Client"),Ve.forEach(s),ne=v(e),O=i(e,"P",{});var os=c(O);Pe=f(os,"Uses the app to chat, needs to be notified of new messages"),os.forEach(s),re=v(e),g=i(e,"P",{});var he=c(g);Se=f(he,"In an easy-rpc setup, each of these entities would have its own role. A "),X=i(he,"CODE",{});var ns=c(X);Me=f(ns,"roles.json"),ns.forEach(s),Ie=f(he," for this setup could look like this:"),he.forEach(s),pe=v(e),Ee(k.$$.fragment,e),ie=v(e),U=i(e,"P",{});var rs=c(U);Oe=f(rs,"On these three roles we can now declare some endpoints. Endpoints always belong to a role and can be called by other roles."),rs.forEach(s),ce=v(e),j=i(e,"BLOCKQUOTE",{});var ps=c(j);A=i(ps,"P",{});var G=c(A);Ue=f(G,"If you are unsure about where to put the files easy-rpc uses, take a look at the "),Z=i(G,"STRONG",{});var is=c(Z);N=i(is,"A",{href:!0});var cs=c(N);je=f(cs,"setup guide in the getting started section"),cs.forEach(s),is.forEach(s),Ne=f(G,". If you need more info on the syntax, see the "),z=i(G,"STRONG",{});var Bs=c(z);T=i(Bs,"A",{href:!0});var ds=c(T);Te=f(ds,"syntax section"),ds.forEach(s),Bs.forEach(s),He=f(G,"."),G.forEach(s),ps.forEach(s),Be=v(e),x=i(e,"P",{});var _e=c(x);qe=f(_e,"We create two "),J=i(_e,"CODE",{});var fs=c(J);Re=f(fs,".erpc"),fs.forEach(s),We=f(_e," files to split up the endpoints by their category."),_e.forEach(s),de=v(e),H=i(e,"P",{});var ys=c(H);Ge=f(ys,"First, the user management:"),ys.forEach(s),fe=v(e),Ee(D.$$.fragment,e),ye=v(e),q=i(e,"P",{});var us=c(q);Ke=f(us,"Second, the messages:"),us.forEach(s),ue=v(e),Ee(P.$$.fragment,e),me=v(e),R=i(e,"P",{});var ms=c(R);Le=f(ms,"And thats it. easy-rpc will generate the clients according to your source files and allow the roles in your project to connect to each other via the endpoints you declared."),ms.forEach(s),this.h()},h(){y(B,"class","icon icon-link"),y(u,"aria-hidden","true"),y(u,"tabindex","-1"),y(u,"href","#roles-and-endpoints"),y(t,"id","roles-and-endpoints"),y(L,"class","icon icon-link"),y(F,"aria-hidden","true"),y(F,"tabindex","-1"),y(F,"href","#user-management-server"),y(E,"id","user-management-server"),y(Q,"class","icon icon-link"),y(C,"aria-hidden","true"),y(C,"tabindex","-1"),y(C,"href","#message-server"),y($,"id","message-server"),y(V,"class","icon icon-link"),y(b,"aria-hidden","true"),y(b,"tabindex","-1"),y(b,"href","#client"),y(w,"id","client"),y(N,"href","/easy-rpc-docs/2%F0%9F%9B%A0%EF%B8%8F%20Getting%20started/1Setup"),y(T,"href","/easy-rpc-docs/4%F0%9F%96%8B%EF%B8%8F%20Syntax/")},m(e,a){o(e,t,a),l(t,u),l(u,B),l(t,n),o(e,r,a),o(e,_,a),l(_,S),o(e,se,a),o(e,E,a),l(E,F),l(F,L),l(E,be),o(e,ae,a),o(e,M,a),l(M,ge),o(e,te,a),o(e,$,a),l($,C),l(C,Q),l($,ke),o(e,le,a),o(e,I,a),l(I,xe),o(e,oe,a),o(e,w,a),l(w,b),l(b,V),l(w,De),o(e,ne,a),o(e,O,a),l(O,Pe),o(e,re,a),o(e,g,a),l(g,Se),l(g,X),l(X,Me),l(g,Ie),o(e,pe,a),Fe(k,e,a),o(e,ie,a),o(e,U,a),l(U,Oe),o(e,ce,a),o(e,j,a),l(j,A),l(A,Ue),l(A,Z),l(Z,N),l(N,je),l(A,Ne),l(A,z),l(z,T),l(T,Te),l(A,He),o(e,Be,a),o(e,x,a),l(x,qe),l(x,J),l(J,Re),l(x,We),o(e,de,a),o(e,H,a),l(H,Ge),o(e,fe,a),Fe(D,e,a),o(e,ye,a),o(e,q,a),l(q,Ke),o(e,ue,a),Fe(P,e,a),o(e,me,a),o(e,R,a),l(R,Le),ve=!0},p(e,a){const Y={};a&2&&(Y.$$scope={dirty:a,ctx:e}),k.$set(Y);const ee={};a&2&&(ee.$$scope={dirty:a,ctx:e}),D.$set(ee);const W={};a&2&&(W.$$scope={dirty:a,ctx:e}),P.$set(W)},i(e){ve||($e(k.$$.fragment,e),$e(D.$$.fragment,e),$e(P.$$.fragment,e),ve=!0)},o(e){Ce(k.$$.fragment,e),Ce(D.$$.fragment,e),Ce(P.$$.fragment,e),ve=!1},d(e){e&&s(t),e&&s(r),e&&s(_),e&&s(se),e&&s(E),e&&s(ae),e&&s(M),e&&s(te),e&&s($),e&&s(le),e&&s(I),e&&s(oe),e&&s(w),e&&s(ne),e&&s(O),e&&s(re),e&&s(g),e&&s(pe),we(k,e),e&&s(ie),e&&s(U),e&&s(ce),e&&s(j),e&&s(Be),e&&s(x),e&&s(de),e&&s(H),e&&s(fe),we(D,e),e&&s(ye),e&&s(q),e&&s(ue),we(P,e),e&&s(me),e&&s(R)}}}function ks(h){let t,u;const B=[h[0]];let n={$$slots:{default:[gs]},$$scope:{ctx:h}};for(let r=0;r<B.length;r+=1)n=Ze(n,B[r]);return t=new $s({props:n}),{c(){Ae(t.$$.fragment)},l(r){Ee(t.$$.fragment,r)},m(r,_){Fe(t,r,_),u=!0},p(r,[_]){const S=_&1?Es(B,[Fs(r[0])]):{};_&2&&(S.$$scope={dirty:_,ctx:r}),t.$set(S)},i(r){u||($e(t.$$.fragment,r),u=!0)},o(r){Ce(t.$$.fragment,r),u=!1},d(r){we(t,r)}}}function xs(h,t,u){return h.$$set=B=>{u(0,t=Ze(Ze({},t),vs(B)))},t=vs(t),[t]}class Ms extends hs{constructor(t){super(),_s(this,t,xs,ks,As,{})}}export{Ms as default};
